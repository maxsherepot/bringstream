[{"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx":"1","F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js":"2","F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx":"3","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx":"4","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js":"5","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js":"6","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js":"7","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js":"8","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx":"9","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx":"10","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx":"11","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx":"12","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx":"13","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx":"14","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx":"15","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx":"16","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx":"17","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js":"18","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js":"19","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js":"20","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js":"21","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js":"22","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js":"23","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js":"24","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js":"25","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js":"26","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js":"27","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js":"28","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js":"29","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js":"30","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js":"31","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js":"32","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js":"33","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js":"34","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js":"35","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js":"36","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js":"37","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js":"38","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js":"39","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js":"40","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js":"41","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js":"42","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js":"43","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx":"44","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js":"45","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\Videos.jsx":"46","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\Playlists.jsx":"47","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\DeletePlaylistModal.jsx":"48","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\CreatePlaylist.jsx":"49","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js":"50","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js":"51","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js":"52","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js":"53","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx":"54","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js":"55","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js":"56","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js":"57","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js":"58","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\EmptyPlaylists.jsx":"59","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\EmptyVideos.jsx":"60","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js":"61","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js":"62","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js":"63","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js":"64","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js":"65","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js":"66","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js":"67","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js":"68","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js":"69","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"70","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx":"71","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js":"72","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js":"73","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js":"74","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js":"75","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js":"76","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js":"77","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js":"78","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx":"79","F:\\Програмування\\bringstream\\channel-admin-test\\src\\hoc\\ContentHOC.jsx":"80","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx":"81","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\CreateVideos.jsx":"82","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\DeleteVideoModal.jsx":"83"},{"size":386,"mtime":1607366235506,"results":"84","hashOfConfig":"85"},{"size":1127,"mtime":1607366235506,"results":"86","hashOfConfig":"85"},{"size":2825,"mtime":1607413505489,"results":"87","hashOfConfig":"85"},{"size":1675,"mtime":1607366235493,"results":"88","hashOfConfig":"85"},{"size":478,"mtime":1607366235543,"results":"89","hashOfConfig":"85"},{"size":1626,"mtime":1607366235526,"results":"90","hashOfConfig":"85"},{"size":6580,"mtime":1607366235525,"results":"91","hashOfConfig":"85"},{"size":398,"mtime":1607367815086,"results":"92","hashOfConfig":"85"},{"size":4993,"mtime":1607366235513,"results":"93","hashOfConfig":"85"},{"size":4462,"mtime":1607366235513,"results":"94","hashOfConfig":"85"},{"size":3979,"mtime":1607366235512,"results":"95","hashOfConfig":"85"},{"size":3978,"mtime":1607366235511,"results":"96","hashOfConfig":"85"},{"size":3090,"mtime":1607366235514,"results":"97","hashOfConfig":"85"},{"size":4158,"mtime":1607366235516,"results":"98","hashOfConfig":"85"},{"size":6023,"mtime":1607436033713,"results":"99","hashOfConfig":"85"},{"size":9605,"mtime":1607366235514,"results":"100","hashOfConfig":"85"},{"size":2905,"mtime":1607366235515,"results":"101","hashOfConfig":"85"},{"size":476,"mtime":1607366884819,"results":"102","hashOfConfig":"85"},{"size":2751,"mtime":1607366857974,"results":"103","hashOfConfig":"85"},{"size":2980,"mtime":1607366235498,"results":"104","hashOfConfig":"85"},{"size":1978,"mtime":1607366235523,"results":"105","hashOfConfig":"85"},{"size":2911,"mtime":1607366235524,"results":"106","hashOfConfig":"85"},{"size":1564,"mtime":1607366235522,"results":"107","hashOfConfig":"85"},{"size":3023,"mtime":1607366235523,"results":"108","hashOfConfig":"85"},{"size":5920,"mtime":1607366235522,"results":"109","hashOfConfig":"85"},{"size":3136,"mtime":1607366235523,"results":"110","hashOfConfig":"85"},{"size":1007,"mtime":1607366235493,"results":"111","hashOfConfig":"85"},{"size":4787,"mtime":1607366235521,"results":"112","hashOfConfig":"85"},{"size":362,"mtime":1607366235543,"results":"113","hashOfConfig":"85"},{"size":2147,"mtime":1607366235539,"results":"114","hashOfConfig":"85"},{"size":798,"mtime":1607366235547,"results":"115","hashOfConfig":"85"},{"size":1240,"mtime":1607366235540,"results":"116","hashOfConfig":"85"},{"size":1497,"mtime":1607435710121,"results":"117","hashOfConfig":"85"},{"size":1176,"mtime":1607366235544,"results":"118","hashOfConfig":"85"},{"size":323,"mtime":1607367363366,"results":"119","hashOfConfig":"85"},{"size":156,"mtime":1607366235505,"results":"120","hashOfConfig":"85"},{"size":1533,"mtime":1607366235544,"results":"121","hashOfConfig":"85"},{"size":2827,"mtime":1607367102988,"results":"122","hashOfConfig":"85"},{"size":3492,"mtime":1607366235533,"results":"123","hashOfConfig":"85"},{"size":2594,"mtime":1607366235530,"results":"124","hashOfConfig":"85"},{"size":1252,"mtime":1607366235533,"results":"125","hashOfConfig":"85"},{"size":2280,"mtime":1607366235529,"results":"126","hashOfConfig":"85"},{"size":4350,"mtime":1607366235545,"results":"127","hashOfConfig":"85"},{"size":1125,"mtime":1607366235516,"results":"128","hashOfConfig":"85"},{"size":1589,"mtime":1607363002020,"results":"129","hashOfConfig":"85"},{"size":4767,"mtime":1607430784907,"results":"130","hashOfConfig":"85"},{"size":4958,"mtime":1607428886038,"results":"131","hashOfConfig":"85"},{"size":2193,"mtime":1607417262776,"results":"132","hashOfConfig":"85"},{"size":10386,"mtime":1607436360275,"results":"133","hashOfConfig":"85"},{"size":18867,"mtime":1607366235498,"results":"134","hashOfConfig":"85"},{"size":493,"mtime":1607366235496,"results":"135","hashOfConfig":"85"},{"size":11001,"mtime":1607366235494,"results":"136","hashOfConfig":"85"},{"size":1975,"mtime":1607366235521,"results":"137","hashOfConfig":"85"},{"size":6582,"mtime":1607366235497,"results":"138","hashOfConfig":"85"},{"size":578,"mtime":1607366235544,"results":"139","hashOfConfig":"85"},{"size":585,"mtime":1607367585808,"results":"140","hashOfConfig":"85"},{"size":737,"mtime":1607366235541,"results":"141","hashOfConfig":"85"},{"size":579,"mtime":1607435526989,"results":"142","hashOfConfig":"85"},{"size":671,"mtime":1607347734777,"results":"143","hashOfConfig":"85"},{"size":777,"mtime":1607347740340,"results":"144","hashOfConfig":"85"},{"size":471,"mtime":1607366235547,"results":"145","hashOfConfig":"85"},{"size":583,"mtime":1607366235540,"results":"146","hashOfConfig":"85"},{"size":542,"mtime":1607366235543,"results":"147","hashOfConfig":"85"},{"size":360,"mtime":1607367231400,"results":"148","hashOfConfig":"85"},{"size":491,"mtime":1607366235535,"results":"149","hashOfConfig":"85"},{"size":551,"mtime":1607366235536,"results":"150","hashOfConfig":"85"},{"size":286,"mtime":1607366235535,"results":"151","hashOfConfig":"85"},{"size":262,"mtime":1607366235538,"results":"152","hashOfConfig":"85"},{"size":433,"mtime":1607366959335,"results":"153","hashOfConfig":"85"},{"size":3525,"mtime":1607366235494,"results":"154","hashOfConfig":"85"},{"size":2655,"mtime":1607366235496,"results":"155","hashOfConfig":"85"},{"size":3780,"mtime":1607435321781,"results":"156","hashOfConfig":"85"},{"size":3814,"mtime":1607435329841,"results":"157","hashOfConfig":"85"},{"size":3100,"mtime":1607366235502,"results":"158","hashOfConfig":"85"},{"size":1548,"mtime":1607366235504,"results":"159","hashOfConfig":"85"},{"size":1644,"mtime":1607366235502,"results":"160","hashOfConfig":"85"},{"size":3993,"mtime":1607366235505,"results":"161","hashOfConfig":"85"},{"size":385,"mtime":1607367287062,"results":"162","hashOfConfig":"85"},{"size":606,"mtime":1607412790311,"results":"163","hashOfConfig":"85"},{"size":7341,"mtime":1607436597092,"results":"164","hashOfConfig":"85"},{"size":1773,"mtime":1607435163715,"results":"165","hashOfConfig":"85"},{"size":11143,"mtime":1607429806989,"results":"166","hashOfConfig":"85"},{"size":2186,"mtime":1607430857348,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"zk08hy",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"170"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"170"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"170"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"170"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"277","usedDeprecatedRules":"170"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"170"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"170"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"170"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"170"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"170"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"170"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"170"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"170"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"170"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx",[],["359","360"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js",["361","362","363"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StackedColumnChart from \"./StackedColumnChart\";\r\nimport modalimage1 from \"../../assets/images/product/img-7.png\";\r\nimport modalimage2 from \"../../assets/images/product/img-4.png\";\r\nimport WelcomeComp from \"./WelcomeComp\";\r\nimport MonthlyEarning from \"./MonthlyEarning\";\r\nimport SocialSource from \"./SocialSource\";\r\nimport ActivityComp from \"./ActivityComp\";\r\nimport TopCities from \"./TopCities\";\r\nimport LatestTranaction from \"./LatestTranaction\";\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport selectors from '../../selectors';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tMedia,\r\n\tTable,\r\n} from \"reactstrap\";\r\n\r\nconst Dashboard = (props) => {\r\n\tconst { channels, history } = props\r\n\tconst [modal, setmodal] = useState(false);\r\n\r\n\tconst reports = [\r\n\t\t{ title: \"Orders\", iconClass: \"bx-copy-alt\", description: \"1,235\" },\r\n\t\t{ title: \"Revenue\", iconClass: \"bx-archive-in\", description: \"$35, 723\" },\r\n\t\t{ title: \"Average Price\", iconClass: \"bx-purchase-tag-alt\", description: \"$16.2\" }\r\n\t];\r\n\tconst email = [\r\n\t\t{ title: \"Week\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Month\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Year\", linkto: \"#\", isActive: true }\r\n\t];\r\n\r\n\tconst lastLocation = useLastLocation()\r\n\tconst lastLoactionPathname = lastLocation?.pathname\r\n\r\n\tuseEffect(()=>{\r\n\t\t\r\n\t\tif (lastLoactionPathname === '/login' || lastLoactionPathname === '/' && channels?.length === 0) {\r\n\t\t\thistory.push('/channels/create')\r\n\t\t}\r\n\t}, [channels])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\r\n\t\t\t\t\t{/* Render Breadcrumb */}\r\n\t\t\t\t\t<Breadcrumbs title={props.t('Dashboard')} breadcrumbItem={props.t('Dashboard')} />\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<WelcomeComp />\r\n\t\t\t\t\t\t\t<MonthlyEarning />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"8\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t{/* Reports Render */}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treports.map((report, key) =>\r\n\t\t\t\t\t\t\t\t\t\t<Col md=\"4\" key={\"_col_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"mini-stats-wid\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Media body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-medium\">{report.title}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{report.description}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mini-stat-icon avatar-sm rounded-circle bg-primary align-self-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"avatar-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={\"bx \" + report.iconClass + \" font-size-24\"}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<CardTitle className=\"mb-4 float-sm-left\">\r\n\t\t\t\t\t\t\t\t\t\tEmail Sent\r\n                                        </CardTitle>\r\n\t\t\t\t\t\t\t\t\t<div className=\"float-sm-right\">\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-pills\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\temail.map((mail, key) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" key={\"_li_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={mail.isActive ? \"nav-link active\" : \"nav-link\"} to={mail.linkto}>{mail.title}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t\t\t<StackedColumnChart />\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<SocialSource />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<ActivityComp />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<TopCities />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t\t<LatestTranaction />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t\t<Modal isOpen={modal} role=\"dialog\" autoFocus={true} centered={true} className=\"exampleModal\" tabindex=\"-1\" toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<ModalHeader toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t\t\tOrder Details\r\n                        </ModalHeader >\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<p className=\"mb-2\">Product id: <span className=\"text-primary\">#SK2540</span></p>\r\n\t\t\t\t\t\t<p className=\"mb-4\">Billing Name: <span className=\"text-primary\">Neal Matthews</span></p>\r\n\r\n\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<Table className=\"table table-centered table-nowrap\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage1} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Wireless Headphone (Black)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 225 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 255</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage2} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Hoodie (Blue)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 145 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 145</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Sub Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Shipping:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Free</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button type=\"button\" color=\"secondary\" onClick={() => { setmodal(!modal); }}>Close</Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n\treturn {\r\n\t\tchannels: selectors.channels.channels(state),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatetoProps)(withNamespaces()(Dashboard));","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js",["364"],"import authorization from './authorization/actions'\r\nimport common from './common/actions'\r\nimport profile from './profile/actions'\r\nimport channels from './channels/actions'\r\nimport playlists from './playlists/actions'\r\nimport videos from './videos/actions'\r\n\r\nexport * from './layout/actions';\r\n\r\nexport default {\r\n  authorization,\r\n  common,\r\n  profile,\r\n  channels,\r\n  playlists,\r\n  videos\r\n}\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx",["365"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Alert, Card, CardBody, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport profile from \"../../assets/images/profile-img.png\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors'\r\n\r\nconst ForgetPasswordPage = React.memo((props) => {\r\n  const { history, onSendNewPassword, successMessage, errorMessage } = props\r\n  const [isSent, setSentStatus] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState('')\r\n\r\n  const path = history.location.pathname.split('/');\r\n  const hash = path[path.length - 1];\r\n\r\n  useEffect(() => {\r\n    if (hash && isSent === null) {\r\n      onSendNewPassword({\"hash\": hash})\r\n      setSentStatus(true)\r\n    }\r\n\r\n    if (successMessage || errorMessage) {\r\n      setResponseMessage(successMessage || errorMessage)\r\n      setSentStatus(false)\r\n    }\r\n  }, [successMessage, errorMessage])\r\n\r\n  const renderCurrentMessage = () => {\r\n    if (isSent === true) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">Please wait</span>\r\n          <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (isSent === false) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">{responseMessage}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"home-btn d-none d-sm-block\">\r\n        <Link to=\"/\" className=\"text-dark\"><i className=\"fas fa-home h2\"></i></Link>\r\n      </div>\r\n      <div className=\"account-pages my-5 pt-sm-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={8} lg={6} xl={5}>\r\n              <Card className=\"overflow-hidden\">\r\n                <div className=\"bg-soft-primary\">\r\n                  <Row>\r\n                    <Col className=\"col-7\">\r\n                      <div className=\"text-primary p-4\">\r\n                        <h5 className=\"text-primary\">Welcome Back !</h5>\r\n                        <p>Sign in to continue to Bring Stream.</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"col-5 align-self-end\">\r\n                      <img src={profile} alt=\"\" className=\"img-fluid\" />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <CardBody className=\"pt-0\">\r\n                  <div>\r\n                    <Link to=\"/\">\r\n                      <div className=\"avatar-md profile-user-wid mb-4\">\r\n                        <span className=\"avatar-title rounded-circle bg-light\">\r\n                          <img src={logo} alt=\"\" className=\"rounded-circle\" height=\"34\" />\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"p-2\">\r\n                    {props.forgetError && props.forgetError ? (\r\n                      <Alert color=\"danger\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetError}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {props.forgetSuccessMsg ? (\r\n                      <Alert color=\"success\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetSuccessMsg}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {renderCurrentMessage()}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n              <div className=\"mt-5 text-center\">\r\n                <p> Go back to <Link to=\"/login\" className=\"font-weight-medium text-primary\">Login</Link></p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMessage: selectors.common.errorMessage(state),\r\n  successMessage: selectors.common.successMessage(state),\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onForgotPassword: (data) => dispatch(Actions.authorization.forgotPasswordRequest(data)),\r\n  onSendNewPassword: (value) => dispatch(Actions.authorization.sendNewPasswordRequest(value)),\r\n})\r\n\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispathcToProps)(ForgetPasswordPage)\r\n);\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx",["366","367"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx",["368"],"import React, { useEffect, useState } from 'react';\r\nimport { CardBody, CardTitle, Button, Container } from 'reactstrap';\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors/index'\r\nimport { validate } from './../../helpers/validation'\r\nimport \"./channels.scss\";\r\n\r\nconst CreateChannel = (props) => {\r\n\t\r\n\tconst { \r\n\t\tonAddChannel, \r\n\t\terrorMessgae, \r\n\t\thistory, \r\n\t\tisChannelAddedSuccessfuly,\r\n\t\tresetIsChannelAddedValue,\r\n\t } = props\r\n\t \r\n\tconst [isSent, setSentStatus] = useState(false)\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetSentStatus(false)\r\n\r\n\t\tif(isChannelAddedSuccessfuly){\r\n\t\t\thistory.push('/channels/getting-started')\r\n\t\t\tresetIsChannelAddedValue()\r\n\t\t}\r\n\t\t\r\n\t}, [errorMessgae, isChannelAddedSuccessfuly])\r\n\r\n\tconst customValidation = value => validate.isChannelNameValid(value) ? true : `The field must not contain spaces.`;\r\n\r\n\tfunction onFormSubmit(event, values) {\r\n\r\n\t\tif(!validate.isChannelNameValid(values.name)) return\r\n\r\n\t\tconst data = {\r\n\t\t\tname: values.name,\r\n\t\t\tsubdomain: values.name.replace(/\\s/g, ''),\r\n\t\t}\r\n\r\n\t\tsetSentStatus(true)\r\n\t\tonAddChannel(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Breadcrumbs\r\n\t\t\t\t\t\ttitle={\"dashboard\"}\r\n\t\t\t\t\t\tbreadcrumbItem={\"create a new project\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"create-form\">\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle className=\"text-center mb-3\">What's the name of your project?</CardTitle>\r\n\t\t\t\t\t\t\t\t<AvForm onValidSubmit={(e, v) => { onFormSubmit(e, v) }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<AvField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your film, show, company name. You can change this later\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tvalidate={{customValidation}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"mt-1 waves-effect waves-light\" color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t{isSent && <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>}\r\n\t\t\t\t\t\t\t\t\t\tCreate Project\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</AvForm>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\terrorMessgae: selectors.common.errorMessage(state),\r\n\tisChannelAddedSuccessfuly: selectors.channels.isChannelAddedSuccessfuly(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonAddChannel: (data) => dispatch(Actions.channels.addChannelRequest(data)),\r\n\tresetIsChannelAddedValue: () => dispatch(Actions.channels.addChannelSucces(false)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withNamespaces()(CreateChannel));\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js",["369"],"\r\nexport const Types = {\r\n  SET_ERROR_NOTIFY: 'SET_ERROR_NOTIFY',\r\n  SET_SUCCESS_NOTIFY: 'SET_SUCCESS_NOTIFY',\r\n}\r\n\r\nconst setErrorNotify = (payload) => ({\r\n  type: Types.SET_ERROR_NOTIFY,\r\n  payload\r\n})\r\n\r\nconst setSuccessNotify = (payload) => ({\r\n  type: Types.SET_SUCCESS_NOTIFY,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  setErrorNotify,\r\n  setSuccessNotify,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js",["370"],"\r\nexport const Types = {\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  \r\n  REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\r\n  REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\r\n  \r\n  FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n\r\n  SEND_NEW_PASSAWORD_REQUEST: 'SEND_NEW_PASSAWORD_REQUEST',\r\n  SEND_NEW_PASSAWORD_SUCCESS: 'SEND_NEW_PASSAWORD_SUCCESS',\r\n\r\n  LOG_OUT: 'LOG_OUT',\r\n\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst loginRequest = (payload) => ({\r\n  type: Types.LOGIN_REQUEST,\r\n  payload\r\n})\r\n\r\nconst loginSucces = (payload) => ({\r\n  type: Types.LOGIN_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst registerUserRequest = (payload) => ({\r\n  type: Types.REGISTER_USER_REQUEST,\r\n  payload\r\n})\r\n\r\nconst registerUserSucces = (payload) => ({\r\n  type: Types.REGISTER_USER_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordRequest = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_REQUEST,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordSuccess = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst logOut = () => ({\r\n  type: Types.LOG_OUT\r\n})\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\nconst sendNewPasswordRequest = (payload) => ({\r\n  type: Types.SEND_NEW_PASSAWORD_REQUEST,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  loginRequest,\r\n  loginSucces,\r\n  registerUserRequest,\r\n  registerUserSucces,\r\n  forgotPasswordRequest,\r\n  forgotPasswordSuccess,\r\n  logOut,\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n  sendNewPasswordRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js",["371"],"\r\nexport const Types = {\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\n\r\nexport default {\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js",["372"],"\r\nexport const Types = {\r\n  ADD_CHANNEL_REQUEST: 'ADD_CHANNEL_REQUEST',\r\n  ADD_CHANNEL_SUCCESS: 'ADD_CHANNEL_SUCCESS',\r\n  \r\n  GET_CHANNELS_REQUEST: 'GET_CHANNELS_REQUEST',\r\n  GET_CHANNELS_SUCCESS: 'GET_CHANNELS_SUCCESS',\r\n  \r\n  SET_ACTIVE_CHANNEL: 'SET_ACTIVE_CHANNEL',\r\n  \r\n  DELETE_CHANNEL_REQUEST: 'DELETE_CHANNEL_REQUEST',\r\n\r\n  UPDATE_CHANNEL_REQUEST: 'UPDATE_CHANNEL_REQUEST',\r\n}\r\n\r\nconst addChannelRequest = (payload) => ({\r\n  type: Types.ADD_CHANNEL_REQUEST,\r\n  payload\r\n})\r\n\r\nconst addChannelSucces = (payload) => ({\r\n  type: Types.ADD_CHANNEL_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst getChannelsRequest = () => ({\r\n  type: Types.GET_CHANNELS_REQUEST,\r\n})\r\n\r\nconst getChannelsSuccess = (payload) => ({\r\n  type: Types.GET_CHANNELS_SUCCESS,\r\n  payload,\r\n})\r\n\r\nconst setActiveChannel = (payload) => ({\r\n  type: Types.SET_ACTIVE_CHANNEL,\r\n  payload,\r\n})\r\n\r\nconst deleteChannelRequest = (payload) => ({\r\n  type: Types.DELETE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\nconst updateChannelRequest = (payload) => ({\r\n  type: Types.UPDATE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\n\r\nexport default {\r\n  addChannelRequest,\r\n  addChannelSucces,\r\n  getChannelsRequest,\r\n  getChannelsSuccess,\r\n  setActiveChannel,\r\n  deleteChannelRequest,\r\n  updateChannelRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js",["373"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js",["374"],"import authorization from './authorization'\r\nimport profile from './profile'\r\nimport common from './common'\r\nimport channels from './channels'\r\nimport playlists from './playlists'\r\nimport videos from './videos'\r\n\r\nexport default {\r\n    authorization,\r\n    profile,\r\n    common,\r\n    channels,\r\n    playlists,\r\n    videos\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js",["375"],"export const Types = {\r\n  ADD_VIDEO_TO_PLAYLIST_REQUEST: \"ADD_VIDEO_TO_PLAYLIST_REQUEST\",\r\n  ADD_VIDEO_TO_PLAYLIST_SUCCESS: \"ADD_VIDEO_TO_PLAYLIST_SUCCESS\",\r\n\r\n  GET_VIDEOS_REQUEST: \"GET_VIDEOS_REQUEST\",\r\n  GET_VIDEOS_SUCCESS: \"GET_VIDEOS_SUCCESS\",\r\n\r\n  GET_VIDEO_BY_PLAYLIST_REQUEST: \"GET_VIDEO_BY_PLAYLIST_REQUEST\",\r\n  GET_VIDEO_BY_PLAYLIST_SUCCESS: \"GET_VIDEO_BY_PLAYLIST_SUCCESS\",\r\n\r\n  REMOVE_VIDEO_FROM_PLAYLIST_REQUEST: \"REMOVE_VIDEO_FROM_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_VIDEO_REQUEST: \"UPDATE_VIDEO_REQUEST\",\r\n};\r\n\r\nconst addVideoToPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addVideoToPlaylistSuccess = () => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getVideosRequest = () => ({\r\n  type: Types.GET_VIDEOS_REQUEST,\r\n});\r\n\r\nconst getVideosSuccess = (payload) => ({\r\n  type: Types.GET_VIDEOS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getVideoByPlaylistRequest = () => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_REQUEST,\r\n});\r\n\r\nconst getVideoByPlaylistSuccess = (payload) => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst removeVideoFromPlaylistRequest = (payload) => ({\r\n  type: Types.REMOVE_VIDEO_FROM_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updateVideoRequest = (payload) => ({\r\n  type: Types.UPDATE_VIDEO_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addVideoToPlaylistRequest,\r\n  addVideoToPlaylistSuccess,\r\n  getVideosRequest,\r\n  getVideosSuccess,\r\n  getVideoByPlaylistRequest,\r\n  getVideoByPlaylistSuccess,\r\n  removeVideoFromPlaylistRequest,\r\n  updateVideoRequest,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\Videos.jsx",["376","377"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  TabPane,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport EmptyVideos from \"./EmptyVideos\";\r\nimport DeleteVideoModal from \"./DeleteVideoModal\";\r\n\r\nconst Videos = (props) => {\r\n  const {\r\n    changePageVideo,\r\n    checkedItemsVideos,\r\n    checkIdVideos,\r\n    checkNameVideos,\r\n    setCheckNameVideos,\r\n    setChekedItemsVideos,\r\n    handleOnDragEnd,\r\n    handleChangeVideos,\r\n    videos,\r\n    onGetVideos,\r\n    modalDeleteVideos,\r\n    toggleDeleteVideos,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (videos === null) {\r\n        onGetVideos();\r\n    }\r\n  }, );\r\n\r\n\r\n  return (\r\n    <Card className=\"flex-column align-items-start\">\r\n      <CardBody className=\"w-100\">\r\n        <CardTitle>Videos</CardTitle>\r\n        <CardSubtitle className=\"mb-3\">{videos?.length} Total</CardSubtitle>\r\n        <div className=\"btn-toolbar py-3\" role=\"toolbar\">\r\n          <Button\r\n            color=\"primary mr-2\"\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            value=\"editVideo\"\r\n            onClick={changePageVideo}\r\n            disabled={checkedItemsVideos.length == 0 || checkedItemsVideos.length > 1}\r\n          >\r\n            Edit <i className=\"mdi mdi-dots-vertical ml-2 dots\"></i>\r\n          </Button>\r\n          <Button\r\n            color=\"primary mr-2\"\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            value=\"newVideo\"\r\n            onClick={changePageVideo}\r\n          >\r\n            <i className=\"dripicons-folder mr-1\"></i> Add to playlist\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            onClick={toggleDeleteVideos}\r\n            disabled={checkedItemsVideos.length === 0}\r\n          >\r\n            {\" \"}\r\n            Delete<i className=\"far fa-trash-alt ml-2\"></i>\r\n          </Button>\r\n          <DeleteVideoModal\r\n            {...{\r\n              checkIdVideos,\r\n              checkNameVideos,\r\n              checkedItemsVideos,\r\n              setCheckNameVideos,\r\n              modalDeleteVideos,\r\n              toggleDeleteVideos,\r\n              onGetVideos,\r\n              setChekedItemsVideos\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {videos?.length === 0 ? (\r\n          <EmptyVideos />\r\n        ) : (\r\n          <Form>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n              <Droppable droppableId=\"characters\">\r\n                {(provided) => (\r\n                  <ul\r\n                    className=\"message-list\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {provided.placeholder}\r\n                    {videos &&\r\n                      videos?.map((p, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            key={p.id}\r\n                            draggableId={String(p.name)}\r\n                            index={index}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                              >\r\n                                <Label className=\"check d-flex align-items-center ml-4\">\r\n                                  <Input\r\n                                    type=\"checkbox\"\r\n                                    name={p.vimeo_name}\r\n                                    checked={checkedItemsVideos.includes(p.id)}\r\n                                    onChange={() => handleChangeVideos(p)}\r\n                                  />\r\n                                  <span className=\"title mr-3\">\r\n                                    {index + 1}\r\n                                  </span>\r\n                                  {p.vimeo_name}\r\n                                  <div className=\"col-mail col-mail-2\">\r\n                                    <div className=\"date\">59:40</div>\r\n                                  </div>\r\n                                </Label>\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </Form>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Videos;\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\Playlists.jsx",["378","379","380"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  TabPane,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport EmptyPlaylists from \"./EmptyPlaylists\";\r\nimport DeletePlaylistModal from './DeletePlaylistModal'\r\n\r\nconst Playlists = (props) => {\r\n  const {\r\n    characters,\r\n    changePagePlaylist,\r\n    checkedItems,\r\n    toggleDelete,\r\n    checkId,\r\n    checkName,\r\n    setCheckName,\r\n    modalDelete,\r\n    onPlaylistDelete,\r\n    onGetPlaylist,\r\n    activeChannel,\r\n    setChekedItems,\r\n    handleOnDragEnd,\r\n    handleChange,\r\n    updateCharacters,\r\n    playlists,\r\n    defaultChannel,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (playlists === null) {\r\n      onGetPlaylist({ id: defaultChannel?.id || \"1\" });\r\n    }\r\n    updateCharacters(playlists);\r\n  }, [playlists, onGetPlaylist]);\r\n\r\n  return (\r\n    <Card className=\"flex-column align-items-start\">\r\n      <CardBody className=\"w-100\">\r\n        <CardTitle>Playlists</CardTitle>\r\n        <CardSubtitle className=\"mb-3\">{characters?.length} Total</CardSubtitle>\r\n        <div className=\"btn-toolbar py-3\" role=\"toolbar\">\r\n          <Button\r\n            color=\"primary mr-2\"\r\n            onClick={changePagePlaylist}\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            value=\"newPlaylist\"\r\n          >\r\n            <i className=\"fa fa-plus-circle mr-1\"></i> Create Playlist\r\n          </Button>\r\n          <Button\r\n            color=\"primary mr-2\"\r\n            onClick={changePagePlaylist}\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            value=\"editPlaylist\"\r\n            disabled={checkedItems.length == 0 || checkedItems.length > 1}\r\n          >\r\n            Edit <i className=\"mdi mdi-dots-vertical ml-2 dots\"></i>\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            onClick={toggleDelete}\r\n            className=\"btn btn-primary waves-light waves-effect\"\r\n            disabled={checkedItems.length === 0}\r\n          >\r\n            {\" \"}\r\n            Delete<i className=\"far fa-trash-alt ml-2\"></i>\r\n          </Button>\r\n          <DeletePlaylistModal\r\n            {...{\r\n              checkId,\r\n              checkName,\r\n              checkedItems,\r\n              setCheckName,\r\n              modalDelete,\r\n              toggleDelete,\r\n              onPlaylistDelete,\r\n              onGetPlaylist,\r\n              activeChannel,\r\n              setChekedItems,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {characters?.length === 0 ? (\r\n          <EmptyPlaylists />\r\n        ) : (\r\n          <Form>\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n              <Droppable droppableId=\"characters\">\r\n                {(provided) => (\r\n                  <ul\r\n                    className=\"message-list\"\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {provided.placeholder}\r\n                    {characters &&\r\n                      characters?.map((p, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            key={p.id}\r\n                            draggableId={String(p.name)}\r\n                            index={index}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                              >\r\n                                <Label className=\"check d-flex align-items-center ml-4\">\r\n                                  <Input\r\n                                    type=\"checkbox\"\r\n                                    name={p.name}\r\n                                    checked={checkedItems.includes(p.id)}\r\n                                    onChange={() => handleChange(p)}\r\n                                  />\r\n                                  <span className=\"title mr-3\">\r\n                                    {index + 1}\r\n                                  </span>\r\n                                  {p.name}\r\n                                  <div className=\"col-mail col-mail-2\">\r\n                                    <div className=\"date\">4 items</div>\r\n                                  </div>\r\n                                </Label>\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n          </Form>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\DeletePlaylistModal.jsx",["381"],"import React from \"react\";\r\nimport { axiosInstance } from '../../../helpers/api';\r\nimport { Button, Modal, ModalHeader, ModalFooter } from \"reactstrap\";\r\nimport { sha1 } from '../../../helpers/sha1';\r\n\r\nexport const DeletePlaylistModal = (props) => {\r\n  // Get props\r\n  const {\r\n    modalDelete,\r\n    toggleDelete,\r\n    //onPlaylistDelete,\r\n    //checkId,\r\n    checkName,\r\n    onGetPlaylist,\r\n    setCheckName,\r\n    setChekedItems,\r\n    activeChannel,\r\n    checkedItems\r\n  } = props;\r\n\r\n  // DELETE PLAYLIST\r\n\r\n  const onDelete = async () => {\r\n    const ids = checkedItems;\r\n    const promises = ids.map(deletePlaylistAction)\r\n    try {\r\n      await Promise.all(promises)\r\n      toggleDelete();\r\n      onGetPlaylist({ id: activeChannel ?.id });\r\n      setCheckName(\"\");\r\n      setChekedItems([]);\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  };\r\n\r\n\r\n  function deletePlaylistAction(id) {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null\r\n    if (!authData) return false\r\n    const queryString = `action=DeletePlaylist&openKey=${authData.openKey}`;\r\n    const params = { id };\r\n    const jsonData = JSON.stringify(params)\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n    formData.append('jsonData', jsonData)\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    };\r\n\r\n    return axiosInstance.post(`?${queryString}`, formData, config)\r\n      .catch(err => console.error(err))\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modalDelete} toggle={toggleDelete}>\r\n        <ModalHeader toggle={toggleDelete}>\r\n          Are you sure you want to delete \"{checkName}\" playlist?\r\n        </ModalHeader>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" className=\"w-sm\" onClick={toggleDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"danger\" className=\"w-sm\" onClick={onDelete}>\r\n            Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletePlaylistModal;","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\CreatePlaylist.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js",["382"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  // Row,\r\n  // Col,\r\n  Collapse,\r\n} from \"reactstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import classname from \"classnames\";\r\n\r\n//i18n\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n//   const [dashboard, setdashboard] = useState(false);\r\n//   const [settings, setSettings] = useState(false);\r\n\r\n  // const [ui, setui] = useState(false);\r\n  // const [product, setProduct] = useState(false);\r\n  // const [email, setemail] = useState(false);\r\n  // const [ecommerce, setecommerce] = useState(false);\r\n  // const [crypto, setcrypto] = useState(false);\r\n  // const [project, setproject] = useState(false);\r\n  // const [task, settask] = useState(false);\r\n  // const [contact, setcontact] = useState(false);\r\n  // const [component, setcomponent] = useState(false);\r\n  // const [form, setform] = useState(false);\r\n  // const [table, settable] = useState(false);\r\n  // const [chart, setchart] = useState(false);\r\n  // const [icon, seticon] = useState(false);\r\n  // const [map, setmap] = useState(false);\r\n  // const [invoice, setinvoice] = useState(false);\r\n  // const [auth, setauth] = useState(false);\r\n  // const [utility, setutility] = useState(false);\r\n\r\n  useEffect(() => {\r\n    var matchingMenuItem = null;\r\n    var ul = document.getElementById(\"navigation\");\r\n    var items = ul.getElementsByTagName(\"a\");\r\n    for (var i = 0; i < items.length; ++i) {\r\n      if (props.location.pathname === items[i].pathname) {\r\n        matchingMenuItem = items[i];\r\n        break;\r\n      }\r\n    }\r\n    if (matchingMenuItem) {\r\n      activateParentDropdown(matchingMenuItem);\r\n    }\r\n  });\r\n  function activateParentDropdown(item) {\r\n    item.classList.add(\"active\");\r\n    const parent = item.parentElement;\r\n    if (parent) {\r\n      parent.classList.add(\"active\"); // li\r\n      const parent2 = parent.parentElement;\r\n      parent2.classList.add(\"active\"); // li\r\n      const parent3 = parent2.parentElement;\r\n      if (parent3) {\r\n        parent3.classList.add(\"active\"); // li\r\n        const parent4 = parent3.parentElement;\r\n        if (parent4) {\r\n          parent4.classList.add(\"active\"); // li\r\n          const parent5 = parent4.parentElement;\r\n          if (parent5) {\r\n            parent5.classList.add(\"active\"); // li\r\n            const parent6 = parent5.parentElement;\r\n            if (parent6) {\r\n              parent6.classList.add(\"active\"); // li\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"topnav\">\r\n        <div className=\"container-fluid\">\r\n          <nav\r\n            className=\"navbar navbar-light navbar-expand-lg topnav-menu\"\r\n            id=\"navigation\"\r\n          >\r\n            <Collapse\r\n              isOpen={props.leftMenu}\r\n              className=\"navbar-collapse\"\r\n              id=\"topnav-menu-content\"\r\n            >\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item dropdown\">\r\n                  <Link\r\n                    className=\"nav-link dropdown-toggle arrow-none\"\r\n                    to=\"#\"\r\n                  >\r\n                    <i className=\"bx bx-home-circle mr-2\"></i>\r\n                    {props.t(\"Dashboard\")}\r\n                    {props.menuOpen} <span className=\"arrow-down\" />\r\n                  </Link>\r\n                  <div className=\"dropdown-menu\">\r\n                    <Link to=\"/dashboard\" className=\"dropdown-item\">\r\n                      {props.t(\"Default\")}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n\r\n                {/* ADD CONTENT PAGE */}\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link arrow-none\" to=\"/content\">\r\n                    <i className=\"bx bx-home-circle mr-2\"></i>\r\n                    {props.t(\"Content\")}\r\n                  </Link>\r\n                </li>\r\n\r\n                {/* <li className=\"nav-item dropdown\">\r\n                                        <Link to=\"/#\" onClick={e => { e.preventDefault(); setui(!ui); }} className=\"nav-link dropdown-toggle arrow-none\">\r\n                                            <i className=\"bx bx-tone mr-2\"></i>{props.t('UI Elements')} <div className=\"arrow-down\"></div>\r\n                                        </Link>\r\n                                        <div\r\n                                            className={classname(\r\n                                                \"dropdown-menu mega-dropdown-menu dropdown-menu-left dropdown-mega-menu-xl\",\r\n                                                { show: ui })}>\r\n                                            <Row>\r\n                                                <Col lg={4}>\r\n                                                    <div>\r\n                                                        <Link to=\"ui-alerts\" className=\"dropdown-item\">{props.t('Alerts')}</Link>\r\n                                                        <Link to=\"ui-buttons\" className=\"dropdown-item\">{props.t('Buttons')}</Link>\r\n                                                        <Link to=\"ui-cards\" className=\"dropdown-item\">{props.t('Cards')}</Link>\r\n                                                        <Link to=\"ui-carousel\" className=\"dropdown-item\">{props.t('Carousel')}</Link>\r\n                                                        <Link to=\"ui-dropdowns\" className=\"dropdown-item\">{props.t('Dropdowns')}</Link>\r\n                                                        <Link to=\"ui-grid\" className=\"dropdown-item\">{props.t('Grid')}</Link>\r\n                                                        <Link to=\"ui-images\" className=\"dropdown-item\">{props.t('Images')}</Link>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col lg={4}>\r\n                                                    <div>\r\n                                                        <Link to=\"ui-lightbox\" className=\"dropdown-item\">{props.t('Lightbox')}</Link>\r\n                                                        <Link to=\"ui-modals\" className=\"dropdown-item\">{props.t('Modals')}</Link>\r\n                                                        <Link to=\"ui-rangeslider\" className=\"dropdown-item\">{props.t('Range Slider')}</Link>\r\n                                                        <Link to=\"ui-session-timeout\" className=\"dropdown-item\">{props.t('Session Timeout')}</Link>\r\n                                                        <Link to=\"ui-progressbars\" className=\"dropdown-item\">{props.t('Progress Bars')}</Link>\r\n                                                        <Link to=\"ui-sweet-alert\" className=\"dropdown-item\">{props.t('Sweet-Alert')}</Link>\r\n                                                        <Link to=\"ui-tabs-accordions\" className=\"dropdown-item\">{props.t('Tabs & Accordions')}</Link>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col lg={4}>\r\n                                                    <div>\r\n                                                        <Link to=\"ui-typography\" className=\"dropdown-item\">{props.t('Typography')}</Link>\r\n                                                        <Link to=\"ui-video\" className=\"dropdown-item\">{props.t('Video')}</Link>\r\n                                                        <Link to=\"ui-general\" className=\"dropdown-item\">{props.t('General')}</Link>\r\n                                                        <Link to=\"ui-colors\" className=\"dropdown-item\">{props.t('Colors')}</Link>\r\n                                                        <Link to=\"ui-rating\" className=\"dropdown-item\">{props.t('Rating')}</Link>\r\n                                                        <Link to=\"ui-notifications\" className=\"dropdown-item\">{props.t('Notifications')}</Link>\r\n                                                        <Link to=\"ui-image-cropper\" className=\"dropdown-item\">{props.t('Image Cropper')}</Link>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </li> */}\r\n\r\n                {/* <li className=\"nav-item\">\r\n                                        <Link to=\"#\" onClick={e => { e.preventDefault(); setProduct(!product); }} className=\"nav-link dropdown-togglez arrow-none\"  >\r\n                                            <i className=\"bx bx-customize mr-2\"></i>Product <div className=\"arrow-down\"></div>\r\n                                        </Link>\r\n                                        <div className={classname(\"dropdown-menu\", { show: product })} >\r\n                                            <Link to=\"#\" className=\"dropdown-item\">Exmple</Link>\r\n                                        </div>\r\n                                    </li> */}\r\n\r\n                {/* <li className=\"nav-item dropdown\">\r\n                                        <Link to=\"/#\" className=\"nav-link dropdown-toggle arrow-none\"\r\n                                            onClick={e => {\r\n                                                e.preventDefault();\r\n                                                setcomponent(!component);\r\n                                            }}>\r\n                                            <i className=\"bx bx-collection mr-2\"></i>{props.t('Components')} <div className=\"arrow-down\"></div>\r\n                                        </Link>\r\n                                        <div className={classname(\"dropdown-menu\", { show: component })}>\r\n                                            <div className=\"dropdown\">\r\n                                                <Link to=\"/#\" className=\"dropdown-item dropdown-toggle arrow-none\"\r\n                                                    onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        setform(!form);\r\n                                                    }}>\r\n                                                   {props.t('Forms')}  <div className=\"arrow-down\"></div>\r\n                                                </Link>\r\n                                                <div className={classname(\"dropdown-menu\", { show:form })}>\r\n                                                    <Link to=\"form-elements\" className=\"dropdown-item\">{props.t('Form Elements')}</Link>\r\n                                                    <Link to=\"form-validation\" className=\"dropdown-item\">{props.t('Form Validation')}</Link>\r\n                                                    <Link to=\"form-advanced\" className=\"dropdown-item\">{props.t('Form Advanced')}</Link>\r\n                                                    <Link to=\"form-editors\" className=\"dropdown-item\">{props.t('Form Editors')}</Link>\r\n                                                    <Link to=\"form-uploads\" className=\"dropdown-item\">{props.t('Form File Upload')} </Link>\r\n                                                    <Link to=\"form-xeditable\" className=\"dropdown-item\">{props.t('Form Xeditable')}</Link>\r\n                                                    <Link to=\"form-repeater\" className=\"dropdown-item\">{props.t('Form Repeater')}</Link>\r\n                                                    <Link to=\"form-wizard\" className=\"dropdown-item\">{props.t('Form Wizard')}</Link>\r\n                                                    <Link to=\"form-mask\" className=\"dropdown-item\">{props.t('Form Mask')}</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dropdown\">\r\n                                                <Link to=\"/#\" className=\"dropdown-item dropdown-toggle arrow-none\"\r\n                                                    onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        settable(!table);\r\n                                                    }}>\r\n                                                    {props.t('Tables')} <div className=\"arrow-down\"></div>\r\n                                                </Link>\r\n                                                <div className={classname(\"dropdown-menu\", { show: table })}>\r\n                                                    <Link to=\"tables-basic\" className=\"dropdown-item\">{props.t('Basic Tables')}</Link>\r\n                                                    <Link to=\"tables-datatable\" className=\"dropdown-item\">{props.t('Data Tables')}</Link>\r\n                                                    <Link to=\"tables-responsive\" className=\"dropdown-item\">{props.t('Responsive Table')}</Link>\r\n                                                    <Link to=\"tables-editable\" className=\"dropdown-item\">{props.t('Editable Table')}</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dropdown\">\r\n                                                <Link to=\"/#\" className=\"dropdown-item dropdown-toggle arrow-none\"\r\n                                                    onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        setchart(!chart);\r\n                                                    }}>\r\n                                                     {props.t('Charts')} <div className=\"arrow-down\"></div>\r\n                                                </Link>\r\n                                                <div className={classname(\"dropdown-menu\", { show: chart })}>\r\n                                                    <Link to=\"apex-charts\" className=\"dropdown-item\"> {props.t('Apex charts')}</Link>\r\n                                                    <Link to=\"chartist-charts\" className=\"dropdown-item\"> {props.t('Chartjs Chart')}</Link>\r\n                                                    <Link to=\"e-charts\" className=\"dropdown-item\"> {props.t('E Chart')}</Link>\r\n                                                    <Link to=\"tui-charts\" className=\"dropdown-item\">{props.t('Toast UI Chart')}</Link>\r\n                                                    <Link to=\"sparkline-charts\" className=\"dropdown-item\"> {props.t('Sparkline Chart')}</Link>\r\n                                                    <Link to=\"charts-knob\" className=\"dropdown-item\">{props.t('Knob Chart')}</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dropdown\">\r\n                                                <Link to=\"/#\" className=\"dropdown-item dropdown-toggle arrow-none\"\r\n                                                    onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        seticon(!icon);\r\n                                                    }}>\r\n                                                     {props.t('Icons')} <div className=\"arrow-down\"></div>\r\n                                                </Link>\r\n                                                <div className={classname(\"dropdown-menu\", { show: icon })}>\r\n                                                    <Link to=\"icons-boxicons\" className=\"dropdown-item\">{props.t('Boxicons')}</Link>\r\n                                                    <Link to=\"icons-materialdesign\" className=\"dropdown-item\">{props.t('Material Design')}</Link>\r\n                                                    <Link to=\"icons-dripicons\" className=\"dropdown-item\">{props.t('Dripicons')}</Link>\r\n                                                    <Link to=\"icons-fontawesome\" className=\"dropdown-item\">{props.t('Font awesome')} </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"dropdown\">\r\n                                                <Link to=\"/#\" className=\"dropdown-item dropdown-toggle arrow-none\"\r\n                                                    onClick={e => {\r\n                                                        e.preventDefault();\r\n                                                        setmap(!map);\r\n                                                    }}>\r\n                                                    {props.t('Maps')} <div className=\"arrow-down\"></div>\r\n                                                </Link>\r\n                                                <div className={classname(\"dropdown-menu\", { show: map })}>\r\n                                                    <Link to=\"maps-google\" className=\"dropdown-item\">{props.t('Google Maps')} </Link>\r\n                                                    <Link to=\"maps-vector\" className=\"dropdown-item\">{props.t('Vector Maps')} </Link>\r\n                                                    <Link to=\"maps-leaflet\" className=\"dropdown-item\">{props.t('Leaflet Maps')} </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li> */}\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                  <Link className=\"nav-link dropdown-toggle\" to=\"#\">\r\n                    <i className=\"bx bx-file mr-2\"></i>Settings{\" \"}\r\n                    <div className=\"arrow-down\"></div>\r\n                  </Link>\r\n                  <div className=\"dropdown-menu\">\r\n                    <Link\r\n                      to=\"/channels/getting-started\"\r\n                      className=\"dropdown-item\"\r\n                    >\r\n                      Getting Started\r\n                    </Link>\r\n                    <Link to=\"/channels/settings\" className=\"dropdown-item\">\r\n                      Channel Settings\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </Collapse>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => {\r\n  const { leftMenu } = state.Layout;\r\n  return { leftMenu };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(mapStatetoProps, {})(withNamespaces()(Navbar))\r\n);\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx",["383"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { showRightSidebarAction, toggleLeftmenu } from \"../../store/actions\";\r\nimport { Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Button } from \"reactstrap\";\r\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\";\r\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\r\nimport logo from \"../../assets/images/bring-stream_logo-wite.png\";\r\nimport { connect } from \"react-redux\";\r\nimport Actions from '../../store/actions'\r\nimport selectors from '../../selectors'\r\nimport { withNamespaces } from 'react-i18next';\r\nimport \"./styles.scss\";\r\n\r\nconst Header = (props) => {\r\n  const [menu, setMenu] = useState(false);\r\n  const {\r\n    channels,\r\n    activeChannel,\r\n    setActiveChannel,\r\n    onGetChannels,\r\n    onGetPlaylist\r\n  } = props\r\n  const defaultChannel = JSON.parse(localStorage.getItem(\"channel\"));\r\n\r\n  useEffect(() => {\r\n    if (channels === null) {\r\n      onGetChannels()\r\n    }\r\n    if(defaultChannel !== activeChannel) {\r\n      onGetPlaylist({id: defaultChannel?.id || \"1\"});\r\n    }\r\n    setActiveChannel(defaultChannel)\r\n  }, [channels, onGetChannels, activeChannel, defaultChannel])\r\n\r\n  function toggleFullscreen() {\r\n    if (\r\n      !document.fullscreenElement &&\r\n      /* alternative standard method */ !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement\r\n    ) {\r\n      // current working methods\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(\r\n          Element.ALLOW_KEYBOARD_INPUT\r\n        );\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  const mapChannelsSelect = () => {\r\n    if (channels === null || channels?.length === 0) {\r\n      return (\r\n        <Link to=\"/channels/create\">\r\n          <Button color=\"secondary\" outline className=\"waves-effect\">\r\n            <i className=\"bx bx-plus font-size-16 align-middle mr-2\" />Creacte a new project\r\n          </Button>\r\n        </Link>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Dropdown isOpen={menu} toggle={() => setMenu(!menu)}>\r\n            <DropdownToggle outline color=\"secondary\" caret>\r\n              {activeChannel?.name} <i className=\"mdi mdi-chevron-down\" />\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              {\r\n                channels?.map(item => (\r\n                  <DropdownItem\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                      setActiveChannel(item)\r\n                      localStorage.setItem(\"channel\", JSON.stringify(item))\r\n                    }}\r\n                    \r\n                  >{item.name}</DropdownItem>\r\n                ))\r\n              }\r\n\r\n              <DropdownItem>\r\n                <Link to=\"/channels/create\">\r\n                  <i className=\"bx bx-plus font-size-16 align-middle mr-2\" />Creacte a new project\r\n              </Link>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n          {\r\n            activeChannel?.url_bs && <a className=\"visite-site-link\" href={activeChannel?.url_bs} rel=\"noopener noreferrer\" target=\"_blank\">\r\n              <Button color=\"secondary\" outline className=\"btn-sm\">Visit Site</Button>\r\n            </a>\r\n          }\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header id=\"page-topbar\">\r\n        <div className=\"navbar-header\">\r\n          <div className=\"d-flex\">\r\n            <div className=\"navbar-brand-box\">\r\n              <Link to=\"/dashboard\" className=\"logo\">\r\n                <img src={logo} alt=\"\" />\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Mobile menu button */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm px-3 font-size-16 d-lg-none header-item waves-effect waves-light\"\r\n              data-toggle=\"collapse\"\r\n              onClick={() => { props.toggleLeftmenu(!props.leftMenu); }}\r\n              data-target=\"#topnav-menu-content\">\r\n              <i className=\"fa fa-fw fa-bars\"></i>\r\n            </button>\r\n\r\n            <div className=\"header-buttons-wrapper\">\r\n              {mapChannelsSelect()}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex\">\r\n\r\n            <LanguageDropdown />\r\n\r\n            <div className=\"dropdown d-none d-lg-inline-block ml-1\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn header-item noti-icon waves-effect\"\r\n                onClick={() => { toggleFullscreen() }}\r\n                data-toggle=\"fullscreen\"><i className=\"bx bx-fullscreen\"></i>\r\n              </button>\r\n            </div>\r\n\r\n            <ProfileMenu />\r\n\r\n            {/* <div className=\"dropdown d-inline-block\">\r\n                <button\r\n                  onClick={() => { props.showRightSidebarAction(!props.showRightSidebar); }}\r\n                  type=\"button\"\r\n                  className=\"btn header-item noti-icon right-bar-toggle waves-effect\" >\r\n                  <i className=\"bx bx-cog bx-spin\"></i>\r\n                </button>\r\n              </div> */}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  const { layoutType, showRightSidebar, leftMenu } = state.Layout;\r\n  return {\r\n    layoutType,\r\n    showRightSidebar,\r\n    leftMenu,\r\n    channels: selectors.channels.channels(state),\r\n    activeChannel: selectors.channels.activeChannel(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  showRightSidebarAction: (value) => dispatch(showRightSidebarAction(value)),\r\n  toggleLeftmenu: (value) => dispatch(toggleLeftmenu(value)),\r\n  onGetChannels: () => dispatch(Actions.channels.getChannelsRequest()),\r\n  setActiveChannel: (data) => dispatch(Actions.channels.setActiveChannel(data)),\r\n  onGetPlaylist: (data) => dispatch(Actions.playlists.getPlaylistsRequest(data)),\r\n})\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(withNamespaces()(Header));\r\n\r\n\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\EmptyPlaylists.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\EmptyVideos.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js",["384"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.playlists)\r\nconst playlists = deepEqualSelector(self, data => data.playlists)\r\nconst onePlaylist = deepEqualSelector(self, data => data.onePlaylist)\r\n\r\nexport default {\r\n  playlists,\r\n  onePlaylist,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js",["385"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.channels)\r\nconst channels = deepEqualSelector(self, data => data.channels)\r\nconst activeChannel = deepEqualSelector(self, data => data.activeChannel)\r\nconst isChannelAddedSuccessfuly = deepEqualSelector(self, data => data.isChannelAddedSuccessfuly)\r\n\r\nexport default {\r\n  channels,\r\n  activeChannel,\r\n  isChannelAddedSuccessfuly,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js",["386"],"import { createSelectorCreator, defaultMemoize, createSelector } from 'reselect'\r\nimport isEqual from 'lodash.isequal'\r\n\r\nexport const selector = createSelector((s) => s, s => s)\r\nconst common = createSelector(selector, data => data.common) \r\nconst errorMessage = createSelector(common, data => data.errorMessage) \r\nconst successMessage = createSelector(common, data => data.successMessage) \r\n\r\nexport const deepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    isEqual,\r\n)\r\n\r\nexport default {\r\n    errorMessage,\r\n    successMessage,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js",["387"],"import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst authorization = createSelector(selector, data => data.authorization)\r\nconst authData = deepEqualSelector(authorization, data => data.authData)\r\n\r\nexport default {\r\n  authData,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js",["388"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst profile = deepEqualSelector(selector, data => data.profile)\r\nconst user = deepEqualSelector(profile, data => data.user)\r\n\r\nexport default {\r\n  user,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js",["389"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js",["390"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js",["391"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  addChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=AddChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  deleteChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=DeleteChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify(data)\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  updateChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateChannel&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  \r\n  getChannels: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=GetChannels&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js",["392"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  getUserProfile: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `?action=GetUserProfile&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(queryString, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  changeUserProfile: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateUserProfile&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js",["393"],"import { axiosInstance } from './index'\r\n\r\nexport default {\r\n  logIn: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Login', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  registerUser: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Register', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  forgotPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=ForgotPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  newPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=NewPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js",["394"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.videos);\r\nconst videos = deepEqualSelector(self, (data) => data.videos);\r\nconst videosByPlaylist = deepEqualSelector(\r\n  self,\r\n  (data) => data.videosByPlaylist\r\n);\r\n\r\nexport default {\r\n  videos,\r\n  videosByPlaylist,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\hoc\\ContentHOC.jsx",["395","396"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx",["397","398"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\CreateVideos.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\DeleteVideoModal.jsx",[],{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","severity":1,"message":"404","line":53,"column":41,"nodeType":"405","messageId":"406","endLine":53,"endColumn":43},{"ruleId":"403","severity":1,"message":"404","line":53,"column":73,"nodeType":"405","messageId":"406","endLine":53,"endColumn":75},{"ruleId":"407","severity":1,"message":"408","line":56,"column":5,"nodeType":"409","endLine":56,"endColumn":15,"suggestions":"410"},{"ruleId":"411","severity":1,"message":"412","line":10,"column":1,"nodeType":"413","endLine":17,"endColumn":2},{"ruleId":"407","severity":1,"message":"414","line":28,"column":6,"nodeType":"409","endLine":28,"endColumn":36,"suggestions":"415"},{"ruleId":"416","severity":1,"message":"417","line":1,"column":17,"nodeType":"418","messageId":"419","endLine":1,"endColumn":26},{"ruleId":"420","severity":1,"message":"421","line":151,"column":25,"nodeType":"422","messageId":"423","endLine":151,"endColumn":39},{"ruleId":"407","severity":1,"message":"424","line":32,"column":5,"nodeType":"409","endLine":32,"endColumn":46,"suggestions":"425"},{"ruleId":"411","severity":1,"message":"412","line":18,"column":1,"nodeType":"413","endLine":21,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":82,"column":1,"nodeType":"413","endLine":95,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":29,"column":1,"nodeType":"413","endLine":34,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":51,"column":1,"nodeType":"413","endLine":59,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":58,"column":1,"nodeType":"413","endLine":67,"endColumn":3},{"ruleId":"411","severity":1,"message":"412","line":8,"column":1,"nodeType":"413","endLine":15,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":53,"column":1,"nodeType":"413","endLine":62,"endColumn":3},{"ruleId":"416","severity":1,"message":"426","line":3,"column":3,"nodeType":"418","messageId":"419","endLine":3,"endColumn":10},{"ruleId":"427","severity":1,"message":"428","line":51,"column":49,"nodeType":"429","messageId":"423","endLine":51,"endColumn":51},{"ruleId":"416","severity":1,"message":"426","line":3,"column":3,"nodeType":"418","messageId":"419","endLine":3,"endColumn":10},{"ruleId":"407","severity":1,"message":"430","line":43,"column":6,"nodeType":"409","endLine":43,"endColumn":32,"suggestions":"431"},{"ruleId":"427","severity":1,"message":"428","line":64,"column":43,"nodeType":"429","messageId":"423","endLine":64,"endColumn":45},{"ruleId":"432","severity":1,"message":"433","line":29,"column":27,"nodeType":"434","messageId":"435","endLine":29,"endColumn":45,"fix":"436"},{"ruleId":"416","severity":1,"message":"437","line":1,"column":17,"nodeType":"418","messageId":"419","endLine":1,"endColumn":25},{"ruleId":"407","severity":1,"message":"438","line":33,"column":6,"nodeType":"409","endLine":33,"endColumn":62,"suggestions":"439"},{"ruleId":"411","severity":1,"message":"412","line":8,"column":1,"nodeType":"413","endLine":11,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":9,"column":1,"nodeType":"413","endLine":13,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":14,"column":1,"nodeType":"413","endLine":17,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":7,"column":1,"nodeType":"413","endLine":9,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":7,"column":1,"nodeType":"413","endLine":9,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":4,"column":1,"nodeType":"413","endLine":124,"endColumn":3},{"ruleId":"411","severity":1,"message":"412","line":4,"column":1,"nodeType":"413","endLine":125,"endColumn":3},{"ruleId":"411","severity":1,"message":"412","line":4,"column":1,"nodeType":"413","endLine":96,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":4,"column":1,"nodeType":"413","endLine":49,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":3,"column":1,"nodeType":"413","endLine":63,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":11,"column":1,"nodeType":"413","endLine":14,"endColumn":3},{"ruleId":"416","severity":1,"message":"440","line":7,"column":8,"nodeType":"418","messageId":"419","endLine":7,"endColumn":14},{"ruleId":"407","severity":1,"message":"441","line":144,"column":6,"nodeType":"409","endLine":144,"endColumn":27,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":21,"column":19,"nodeType":"445","endLine":23,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":37,"column":19,"nodeType":"445","endLine":39,"endColumn":22},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'lastLoactionPathname'. Either include them or remove the dependency array.","ArrayExpression",["448"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'hash', 'isSent', and 'onSendNewPassword'. Either include them or remove the dependency array.",["449"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'setChangeVideo'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'history' and 'resetIsChannelAddedValue'. Either include them or remove the dependency array.",["450"],"'TabPane' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'defaultChannel?.id' and 'updateCharacters'. Either include them or remove the dependency array.",["451"],"no-whitespace-before-property","Unexpected whitespace before property id.","MemberExpression","unexpectedWhitespace",{"range":"452","text":"453"},"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'onGetPlaylist' and 'setActiveChannel'. Either include them or remove the dependency array.",["454"],"'videos' is defined but never used.","React Hook useEffect has a missing dependency: 'defaultChannel'. Either include it or remove the dependency array.",["455"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},[736,739],"?.",{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Update the dependencies array to be: [channels, history, lastLoactionPathname]",{"range":"468","text":"469"},"Update the dependencies array to be: [successMessage, errorMessage, hash, isSent, onSendNewPassword]",{"range":"470","text":"471"},"Update the dependencies array to be: [errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",{"range":"472","text":"473"},"Update the dependencies array to be: [playlists, onGetPlaylist, updateCharacters, defaultChannel?.id]",{"range":"474","text":"475"},"Update the dependencies array to be: [channels, onGetChannels, activeChannel, defaultChannel, setActiveChannel, onGetPlaylist]",{"range":"476","text":"477"},"Update the dependencies array to be: [defaultChannel, props.activeChannel]",{"range":"478","text":"479"},[1807,1817],"[channels, history, lastLoactionPathname]",[1033,1063],"[successMessage, errorMessage, hash, isSent, onSendNewPassword]",[913,954],"[errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",[911,937],"[playlists, onGetPlaylist, updateCharacters, defaultChannel?.id]",[1185,1241],"[channels, onGetChannels, activeChannel, defaultChannel, setActiveChannel, onGetPlaylist]",[4735,4756],"[defaultChannel, props.activeChannel]"]