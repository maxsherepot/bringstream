[{"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx":"1","F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js":"2","F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx":"3","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx":"4","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js":"5","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js":"6","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js":"7","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js":"8","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx":"9","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx":"10","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx":"11","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx":"12","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx":"13","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx":"14","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx":"15","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx":"16","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx":"17","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js":"18","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js":"19","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js":"20","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js":"21","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js":"22","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js":"23","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js":"24","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js":"25","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js":"26","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js":"27","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js":"28","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js":"29","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js":"30","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js":"31","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js":"32","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js":"33","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js":"34","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js":"35","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js":"36","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js":"37","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js":"38","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js":"39","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js":"40","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js":"41","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js":"42","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js":"43","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx":"44","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js":"45","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\Videos.jsx":"46","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\Playlists.jsx":"47","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\DeletePlaylistModal.jsx":"48","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\CreatePlaylist.jsx":"49","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js":"50","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js":"51","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js":"52","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js":"53","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx":"54","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js":"55","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js":"56","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js":"57","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js":"58","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\EmptyPlaylists.jsx":"59","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\EmptyVideos.jsx":"60","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js":"61","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js":"62","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js":"63","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js":"64","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js":"65","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js":"66","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js":"67","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js":"68","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js":"69","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"70","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx":"71","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js":"72","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js":"73","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js":"74","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js":"75","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js":"76","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js":"77","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js":"78","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx":"79","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx":"80","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\CreateVideos.jsx":"81","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\DeleteVideoModal.jsx":"82"},{"size":386,"mtime":1607366235506,"results":"83","hashOfConfig":"84"},{"size":1127,"mtime":1607366235506,"results":"85","hashOfConfig":"84"},{"size":2832,"mtime":1607462117727,"results":"86","hashOfConfig":"84"},{"size":1675,"mtime":1607366235493,"results":"87","hashOfConfig":"84"},{"size":478,"mtime":1607366235543,"results":"88","hashOfConfig":"84"},{"size":1626,"mtime":1607366235526,"results":"89","hashOfConfig":"84"},{"size":6580,"mtime":1607366235525,"results":"90","hashOfConfig":"84"},{"size":398,"mtime":1607367815086,"results":"91","hashOfConfig":"84"},{"size":4993,"mtime":1607366235513,"results":"92","hashOfConfig":"84"},{"size":4462,"mtime":1607366235513,"results":"93","hashOfConfig":"84"},{"size":3979,"mtime":1607366235512,"results":"94","hashOfConfig":"84"},{"size":3978,"mtime":1607366235511,"results":"95","hashOfConfig":"84"},{"size":3090,"mtime":1607366235514,"results":"96","hashOfConfig":"84"},{"size":4158,"mtime":1607366235516,"results":"97","hashOfConfig":"84"},{"size":9523,"mtime":1607692179997,"results":"98","hashOfConfig":"84"},{"size":9608,"mtime":1607461889337,"results":"99","hashOfConfig":"84"},{"size":2905,"mtime":1607366235515,"results":"100","hashOfConfig":"84"},{"size":476,"mtime":1607366884819,"results":"101","hashOfConfig":"84"},{"size":2751,"mtime":1607366857974,"results":"102","hashOfConfig":"84"},{"size":2980,"mtime":1607366235498,"results":"103","hashOfConfig":"84"},{"size":1978,"mtime":1607366235523,"results":"104","hashOfConfig":"84"},{"size":2911,"mtime":1607366235524,"results":"105","hashOfConfig":"84"},{"size":1564,"mtime":1607366235522,"results":"106","hashOfConfig":"84"},{"size":3023,"mtime":1607366235523,"results":"107","hashOfConfig":"84"},{"size":5920,"mtime":1607366235522,"results":"108","hashOfConfig":"84"},{"size":3136,"mtime":1607366235523,"results":"109","hashOfConfig":"84"},{"size":1007,"mtime":1607366235493,"results":"110","hashOfConfig":"84"},{"size":4787,"mtime":1607366235521,"results":"111","hashOfConfig":"84"},{"size":362,"mtime":1607366235543,"results":"112","hashOfConfig":"84"},{"size":2147,"mtime":1607366235539,"results":"113","hashOfConfig":"84"},{"size":798,"mtime":1607366235547,"results":"114","hashOfConfig":"84"},{"size":1240,"mtime":1607366235540,"results":"115","hashOfConfig":"84"},{"size":1497,"mtime":1607435710121,"results":"116","hashOfConfig":"84"},{"size":1176,"mtime":1607366235544,"results":"117","hashOfConfig":"84"},{"size":323,"mtime":1607367363366,"results":"118","hashOfConfig":"84"},{"size":156,"mtime":1607366235505,"results":"119","hashOfConfig":"84"},{"size":1533,"mtime":1607366235544,"results":"120","hashOfConfig":"84"},{"size":2823,"mtime":1607686103758,"results":"121","hashOfConfig":"84"},{"size":3434,"mtime":1607441461295,"results":"122","hashOfConfig":"84"},{"size":2594,"mtime":1607366235530,"results":"123","hashOfConfig":"84"},{"size":1252,"mtime":1607366235533,"results":"124","hashOfConfig":"84"},{"size":2280,"mtime":1607366235529,"results":"125","hashOfConfig":"84"},{"size":4350,"mtime":1607366235545,"results":"126","hashOfConfig":"84"},{"size":1125,"mtime":1607366235516,"results":"127","hashOfConfig":"84"},{"size":1607,"mtime":1607684592765,"results":"128","hashOfConfig":"84"},{"size":8122,"mtime":1607692179134,"results":"129","hashOfConfig":"84"},{"size":6693,"mtime":1607599277846,"results":"130","hashOfConfig":"84"},{"size":1425,"mtime":1607687438426,"results":"131","hashOfConfig":"84"},{"size":10539,"mtime":1607599293842,"results":"132","hashOfConfig":"84"},{"size":18856,"mtime":1607684098772,"results":"133","hashOfConfig":"84"},{"size":493,"mtime":1607366235496,"results":"134","hashOfConfig":"84"},{"size":11001,"mtime":1607366235494,"results":"135","hashOfConfig":"84"},{"size":1975,"mtime":1607366235521,"results":"136","hashOfConfig":"84"},{"size":6615,"mtime":1607455480278,"results":"137","hashOfConfig":"84"},{"size":578,"mtime":1607366235544,"results":"138","hashOfConfig":"84"},{"size":585,"mtime":1607367585808,"results":"139","hashOfConfig":"84"},{"size":737,"mtime":1607366235541,"results":"140","hashOfConfig":"84"},{"size":579,"mtime":1607435526989,"results":"141","hashOfConfig":"84"},{"size":671,"mtime":1607347734777,"results":"142","hashOfConfig":"84"},{"size":777,"mtime":1607692165303,"results":"143","hashOfConfig":"84"},{"size":471,"mtime":1607366235547,"results":"144","hashOfConfig":"84"},{"size":583,"mtime":1607366235540,"results":"145","hashOfConfig":"84"},{"size":542,"mtime":1607366235543,"results":"146","hashOfConfig":"84"},{"size":360,"mtime":1607367231400,"results":"147","hashOfConfig":"84"},{"size":491,"mtime":1607366235535,"results":"148","hashOfConfig":"84"},{"size":551,"mtime":1607366235536,"results":"149","hashOfConfig":"84"},{"size":286,"mtime":1607366235535,"results":"150","hashOfConfig":"84"},{"size":262,"mtime":1607366235538,"results":"151","hashOfConfig":"84"},{"size":433,"mtime":1607366959335,"results":"152","hashOfConfig":"84"},{"size":3525,"mtime":1607366235494,"results":"153","hashOfConfig":"84"},{"size":2655,"mtime":1607366235496,"results":"154","hashOfConfig":"84"},{"size":4106,"mtime":1607688669723,"results":"155","hashOfConfig":"84"},{"size":3865,"mtime":1607687353820,"results":"156","hashOfConfig":"84"},{"size":3100,"mtime":1607366235502,"results":"157","hashOfConfig":"84"},{"size":1548,"mtime":1607366235504,"results":"158","hashOfConfig":"84"},{"size":1644,"mtime":1607366235502,"results":"159","hashOfConfig":"84"},{"size":3993,"mtime":1607366235505,"results":"160","hashOfConfig":"84"},{"size":385,"mtime":1607367287062,"results":"161","hashOfConfig":"84"},{"size":606,"mtime":1607412790311,"results":"162","hashOfConfig":"84"},{"size":1790,"mtime":1607692116232,"results":"163","hashOfConfig":"84"},{"size":10176,"mtime":1607689132649,"results":"164","hashOfConfig":"84"},{"size":2317,"mtime":1607688472127,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"zk08hy",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"168"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"168"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"168"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"168"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"168"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"168"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"168"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"168"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"168"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"168"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx",[],["352","353"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js",["354","355","356"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StackedColumnChart from \"./StackedColumnChart\";\r\nimport modalimage1 from \"../../assets/images/product/img-7.png\";\r\nimport modalimage2 from \"../../assets/images/product/img-4.png\";\r\nimport WelcomeComp from \"./WelcomeComp\";\r\nimport MonthlyEarning from \"./MonthlyEarning\";\r\nimport SocialSource from \"./SocialSource\";\r\nimport ActivityComp from \"./ActivityComp\";\r\nimport TopCities from \"./TopCities\";\r\nimport LatestTranaction from \"./LatestTranaction\";\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport selectors from '../../selectors';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tMedia,\r\n\tTable,\r\n} from \"reactstrap\";\r\n\r\nconst Dashboard = (props) => {\r\n\tconst { channels, history } = props\r\n\tconst [modal, setmodal] = useState(false);\r\n\r\n\tconst reports = [\r\n\t\t{ title: \"Orders\", iconClass: \"bx-copy-alt\", description: \"1,235\" },\r\n\t\t{ title: \"Revenue\", iconClass: \"bx-archive-in\", description: \"$35, 723\" },\r\n\t\t{ title: \"Average Price\", iconClass: \"bx-purchase-tag-alt\", description: \"$16.2\" }\r\n\t];\r\n\tconst email = [\r\n\t\t{ title: \"Week\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Month\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Year\", linkto: \"#\", isActive: true }\r\n\t];\r\n\r\n\tconst lastLocation = useLastLocation()\r\n\tconst lastLoactionPathname = lastLocation?.pathname\r\n\r\n\tuseEffect(()=>{\r\n\t\t\r\n\t\tif (lastLoactionPathname === '/login' || lastLoactionPathname === '/' && channels?.length === 0) {\r\n\t\t\thistory.push('/channels/create')\r\n\t\t}\r\n\t}, [channels])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\r\n\t\t\t\t\t{/* Render Breadcrumb */}\r\n\t\t\t\t\t<Breadcrumbs title={props.t('Dashboard')} breadcrumbItem={props.t('Dashboard')} />\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<WelcomeComp />\r\n\t\t\t\t\t\t\t<MonthlyEarning />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"8\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t{/* Reports Render */}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treports.map((report, key) =>\r\n\t\t\t\t\t\t\t\t\t\t<Col md=\"4\" key={\"_col_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"mini-stats-wid\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Media body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-medium\">{report.title}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{report.description}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mini-stat-icon avatar-sm rounded-circle bg-primary align-self-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"avatar-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={\"bx \" + report.iconClass + \" font-size-24\"}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<CardTitle className=\"mb-4 float-sm-left\">\r\n\t\t\t\t\t\t\t\t\t\tEmail Sent\r\n                                        </CardTitle>\r\n\t\t\t\t\t\t\t\t\t<div className=\"float-sm-right\">\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-pills\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\temail.map((mail, key) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" key={\"_li_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={mail.isActive ? \"nav-link active\" : \"nav-link\"} to={mail.linkto}>{mail.title}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t\t\t<StackedColumnChart />\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<SocialSource />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<ActivityComp />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<TopCities />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t\t<LatestTranaction />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t\t<Modal isOpen={modal} role=\"dialog\" autoFocus={true} centered={true} className=\"exampleModal\" tabindex=\"-1\" toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<ModalHeader toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t\t\tOrder Details\r\n                        </ModalHeader >\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<p className=\"mb-2\">Product id: <span className=\"text-primary\">#SK2540</span></p>\r\n\t\t\t\t\t\t<p className=\"mb-4\">Billing Name: <span className=\"text-primary\">Neal Matthews</span></p>\r\n\r\n\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<Table className=\"table table-centered table-nowrap\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage1} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Wireless Headphone (Black)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 225 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 255</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage2} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Hoodie (Blue)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 145 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 145</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Sub Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Shipping:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Free</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button type=\"button\" color=\"secondary\" onClick={() => { setmodal(!modal); }}>Close</Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n\treturn {\r\n\t\tchannels: selectors.channels.channels(state),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatetoProps)(withNamespaces()(Dashboard));","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js",["357"],"import authorization from './authorization/actions'\r\nimport common from './common/actions'\r\nimport profile from './profile/actions'\r\nimport channels from './channels/actions'\r\nimport playlists from './playlists/actions'\r\nimport videos from './videos/actions'\r\n\r\nexport * from './layout/actions';\r\n\r\nexport default {\r\n  authorization,\r\n  common,\r\n  profile,\r\n  channels,\r\n  playlists,\r\n  videos\r\n}\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx",["358"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Alert, Card, CardBody, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport profile from \"../../assets/images/profile-img.png\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors'\r\n\r\nconst ForgetPasswordPage = React.memo((props) => {\r\n  const { history, onSendNewPassword, successMessage, errorMessage } = props\r\n  const [isSent, setSentStatus] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState('')\r\n\r\n  const path = history.location.pathname.split('/');\r\n  const hash = path[path.length - 1];\r\n\r\n  useEffect(() => {\r\n    if (hash && isSent === null) {\r\n      onSendNewPassword({\"hash\": hash})\r\n      setSentStatus(true)\r\n    }\r\n\r\n    if (successMessage || errorMessage) {\r\n      setResponseMessage(successMessage || errorMessage)\r\n      setSentStatus(false)\r\n    }\r\n  }, [successMessage, errorMessage])\r\n\r\n  const renderCurrentMessage = () => {\r\n    if (isSent === true) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">Please wait</span>\r\n          <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (isSent === false) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">{responseMessage}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"home-btn d-none d-sm-block\">\r\n        <Link to=\"/\" className=\"text-dark\"><i className=\"fas fa-home h2\"></i></Link>\r\n      </div>\r\n      <div className=\"account-pages my-5 pt-sm-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={8} lg={6} xl={5}>\r\n              <Card className=\"overflow-hidden\">\r\n                <div className=\"bg-soft-primary\">\r\n                  <Row>\r\n                    <Col className=\"col-7\">\r\n                      <div className=\"text-primary p-4\">\r\n                        <h5 className=\"text-primary\">Welcome Back !</h5>\r\n                        <p>Sign in to continue to Bring Stream.</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"col-5 align-self-end\">\r\n                      <img src={profile} alt=\"\" className=\"img-fluid\" />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <CardBody className=\"pt-0\">\r\n                  <div>\r\n                    <Link to=\"/\">\r\n                      <div className=\"avatar-md profile-user-wid mb-4\">\r\n                        <span className=\"avatar-title rounded-circle bg-light\">\r\n                          <img src={logo} alt=\"\" className=\"rounded-circle\" height=\"34\" />\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"p-2\">\r\n                    {props.forgetError && props.forgetError ? (\r\n                      <Alert color=\"danger\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetError}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {props.forgetSuccessMsg ? (\r\n                      <Alert color=\"success\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetSuccessMsg}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {renderCurrentMessage()}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n              <div className=\"mt-5 text-center\">\r\n                <p> Go back to <Link to=\"/login\" className=\"font-weight-medium text-primary\">Login</Link></p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMessage: selectors.common.errorMessage(state),\r\n  successMessage: selectors.common.successMessage(state),\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onForgotPassword: (data) => dispatch(Actions.authorization.forgotPasswordRequest(data)),\r\n  onSendNewPassword: (value) => dispatch(Actions.authorization.sendNewPasswordRequest(value)),\r\n})\r\n\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispathcToProps)(ForgetPasswordPage)\r\n);\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx",["359","360"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport selectors from \"../../selectors\";\r\nimport Actions from \"../../store/actions\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport \"./content.scss\";\r\nimport Upload from \"./Upload/Upload\";\r\nimport Playlists from \"./Playlists/Playlists\";\r\nimport Videos from \"./Videos/Videos\";\r\nimport TabButton from \"./TabButton/TabButton\";\r\n\r\nconst Content = (props) => {\r\n  // Get props\r\n  const {\r\n    playlists,\r\n    activeChannel,\r\n    videos,\r\n    onAddPlaylist,\r\n    onPlaylistDelete,\r\n    onUpdatePlaylist,\r\n    onGetPlaylist,\r\n    onUpdateVideo,\r\n    onAddVideoToPlaylist,\r\n    onGetVideosByPlaylist,\r\n    videosByPlaylist,\r\n  } = props;\r\n\r\n  // State local\r\n  // Playlists state\r\n  const [changePlaylist, setChangePlaylist] = useState(false);\r\n  const [modalDelete, setModalDelete] = useState(false);\r\n  const [checkName, setCheckName] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"2\");\r\n  const [valueButton, setValueButton] = useState(\"\");\r\n  const [characters, updateCharacters] = useState(playlists);\r\n  const [checkedItems, setChekedItems] = useState([]);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [editNamePlaylist, setEditNamePlaylist] = useState(\"\");\r\n  const [editDescriptionPlaylist, setEditDescriptionPlaylist] = useState(\"\");\r\n\r\n  // Videos state\r\n  const [changeVideos, setChangeVideo] = useState(false);\r\n  const [editNameVideos, setEditNameVideos] = useState(\"\");\r\n  const [editDescriptionVideos, setEditDescriptionVideos] = useState(\"\");\r\n  const [checkNameVideos, setCheckNameVideos] = useState(\"\");\r\n  const [valueButtonVideos, setValueButtonVideos] = useState(\"\");\r\n  const [checkedItemsVideos, setChekedItemsVideos] = useState([]);\r\n  const [modalDeleteVideos, setModalDeleteVideos] = useState(false);\r\n  const [dragVIdeo, updateDragVideo] = useState(videosByPlaylist);\r\n  const [getPlaylist, setGetPlaylist] = useState(\"\");\r\n\r\n  // Vallues\r\n  const defaultChannel = JSON.parse(localStorage.getItem(\"channel\"));\r\n  const item = characters?.filter((c) => c.id === checkedItems[0]);\r\n  const itemVideos = dragVIdeo?.filter((v) => v.id === checkedItemsVideos[0]);\r\n\r\n  // Handle event\r\n\r\n  // Change page on click Create Playlist || Edit Playlist\r\n  const changePagePlaylist = (e) => {\r\n    const nameButton = e.target.value;\r\n    if (nameButton === \"editPlaylist\") {\r\n      setEditNamePlaylist(item[0].name);\r\n      setEditDescriptionPlaylist(item[0].description);\r\n      setCheckName(item[0].name);\r\n      setChangePlaylist(true);\r\n      setValueButton(nameButton);\r\n    } else {\r\n      setChangePlaylist(true);\r\n      setValueButton(nameButton);\r\n    }\r\n  };\r\n\r\n  // Change page on click Add video || Edit video\r\n  const changePageVideo = (e) => {\r\n    const nameButton = e.target.value;\r\n    setEditNameVideos(itemVideos[0]?.vimeo_name);\r\n    setEditDescriptionVideos(JSON.parse(itemVideos[0].description)[\"EN\"]);\r\n    setCheckNameVideos(itemVideos[0].name);\r\n    setChangeVideo(true);\r\n    setValueButtonVideos(nameButton);\r\n  };\r\n\r\n  // Toggle modal window (DELETE)\r\n  const toggleDelete = () => {\r\n    setModalDelete(!modalDelete);\r\n    setCheckName(item[0].name);\r\n  };\r\n\r\n  const toggleDeleteVideos = () => {\r\n    setModalDeleteVideos(!modalDeleteVideos);\r\n    setCheckNameVideos(itemVideos[0].vimeo_name);\r\n  };\r\n\r\n  // Toggle tab (LEFT PANEL)\r\n  const toggleTab = (tab) => {\r\n    if (checkName !== editNamePlaylist) {\r\n      setModalSave(!modalSave);\r\n    } else {\r\n      if (activeTab !== tab) {\r\n        setActiveTab(tab);\r\n        setChangePlaylist(false);\r\n        setChangeVideo(false);\r\n        setChekedItems([]);\r\n        setChekedItemsVideos([]);\r\n      }\r\n      setChangePlaylist(false);\r\n      setChangeVideo(false);\r\n      setChekedItems([]);\r\n      setChekedItemsVideos([]);\r\n    }\r\n  };\r\n\r\n  // Drag playlist or videos\r\n  function handleOnDragEnd(result, items, setItems) {\r\n    if (!result.destination) return;\r\n\r\n    const getItems = Array.from(items);\r\n    const [reorderedItem] = getItems.splice(result.source.index, 1);\r\n    getItems.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setItems(getItems);\r\n  }\r\n\r\n  // Set & remove checkmark\r\n  const handleChange = (p, checkItems, setCheckItems) => {\r\n    const clickedCategory = checkItems.indexOf(p.id);\r\n    const all = [...checkItems];\r\n\r\n    if (clickedCategory === -1) {\r\n      all.push(p.id);\r\n    } else {\r\n      all.splice(clickedCategory, 1);\r\n    }\r\n    setCheckItems(all);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (defaultChannel !== props.activeChannel) {\r\n      setChekedItems([]);\r\n    }\r\n  }, [props.activeChannel]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <Container fluid>\r\n          <Breadcrumbs title={\"Dashboard\"} breadcrumbItem={\"content\"} />\r\n          <Row className=\"align-items-start\">\r\n            {/* LEFT PANEL */}\r\n            <Col xs=\"12\" sm=\"5\" md=\"4\" lg=\"3\">\r\n              <Card>\r\n                <CardBody>\r\n                  <TabButton\r\n                    {...{ activeTab, toggleTab, characters, dragVIdeo }}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            {/* RIGHT PANEL */}\r\n            <Col xs=\"12\" sm=\"7\" md=\"8\" lg=\"9\">\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Playlists\r\n                    {...{\r\n                      characters,\r\n                      changePagePlaylist,\r\n                      checkedItems,\r\n                      toggleDelete,\r\n                      checkName,\r\n                      setCheckName,\r\n                      modalDelete,\r\n                      onPlaylistDelete,\r\n                      onGetPlaylist,\r\n                      activeChannel,\r\n                      setChekedItems,\r\n                      handleOnDragEnd,\r\n                      handleChange,\r\n                      updateCharacters,\r\n                      playlists,\r\n                      defaultChannel,\r\n                      videosByPlaylist,\r\n                      onAddPlaylist,\r\n                      onUpdatePlaylist,\r\n                      changePlaylist,\r\n                      setChangePlaylist,\r\n                      valueButton,\r\n                      editNamePlaylist,\r\n                      setEditNamePlaylist,\r\n                      editDescriptionPlaylist,\r\n                      setEditDescriptionPlaylist,\r\n                      modalSave,\r\n                      setModalSave,\r\n                    }}\r\n                  />\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <Videos\r\n                    {...{\r\n                      characters,\r\n                      dragVIdeo,\r\n                      updateDragVideo,\r\n                      changePageVideo,\r\n                      checkedItemsVideos,\r\n                      checkNameVideos,\r\n                      setCheckNameVideos,\r\n                      setChekedItemsVideos,\r\n                      handleOnDragEnd,\r\n                      handleChange,\r\n                      videosByPlaylist,\r\n                      setChangeVideo,\r\n                      modalDeleteVideos,\r\n                      toggleDeleteVideos,\r\n                      changeVideos,\r\n                      editNameVideos,\r\n                      setEditNameVideos,\r\n                      editDescriptionVideos,\r\n                      setEditDescriptionVideos,\r\n                      valueButtonVideos,\r\n                      onUpdateVideo,\r\n                      onAddVideoToPlaylist,\r\n                      onGetVideosByPlaylist,\r\n                      getPlaylist,\r\n                      setGetPlaylist,\r\n                      setActiveTab\r\n                    }}\r\n                  />\r\n                </TabPane>\r\n                <TabPane tabId=\"3\">\r\n                  <Card>\r\n                    <Upload />\r\n                  </Card>\r\n                </TabPane>\r\n              </TabContent>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Get redux state values\r\nconst mapStatetoProps = (state) => ({\r\n  playlists: selectors.playlists.playlists(state),\r\n  activeChannel: selectors.channels.activeChannel(state),\r\n  onePlayist: selectors.playlists.onePlaylist(state),\r\n  videos: selectors.videos.videos(state),\r\n  videosByPlaylist: selectors.videos.videosByPlaylist(state),\r\n});\r\n\r\n// Get redux state function\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddPlaylist: (data) => dispatch(Actions.playlists.addPlaylistRequest(data)),\r\n  onPlaylistDelete: (data) =>\r\n    dispatch(Actions.playlists.deletePlaylistRequest(data)),\r\n  onUpdatePlaylist: (data) =>\r\n    dispatch(Actions.playlists.updatePlaylistRequest(data)),\r\n  onGetPlaylist: (data) =>\r\n    dispatch(Actions.playlists.getPlaylistsRequest(data)),\r\n  onGetOnePlaylist: (data) =>\r\n    dispatch(Actions.playlists.getOnePlaylistRequest(data)),\r\n\r\n  onUpdateVideo: (data) => dispatch(Actions.videos.updateVideoRequest(data)),\r\n  onAddVideoToPlaylist: (data) =>\r\n    dispatch(Actions.videos.addVideoToPlaylistRequest(data)),\r\n  onGetVideosByPlaylist: (data) =>\r\n    dispatch(Actions.videos.getVideoByPlaylistRequest(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchToProps\r\n)(withNamespaces()(Content));\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx",["361"],"import React, { useEffect, useState } from 'react';\r\nimport { CardBody, CardTitle, Button, Container } from 'reactstrap';\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors/index'\r\nimport { validate } from './../../helpers/validation'\r\nimport \"./channels.scss\";\r\n\r\nconst CreateChannel = (props) => {\r\n\t\r\n\tconst { \r\n\t\tonAddChannel, \r\n\t\terrorMessgae, \r\n\t\thistory, \r\n\t\tisChannelAddedSuccessfuly,\r\n\t\tresetIsChannelAddedValue,\r\n\t } = props\r\n\t \r\n\tconst [isSent, setSentStatus] = useState(false)\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetSentStatus(false)\r\n\r\n\t\tif(isChannelAddedSuccessfuly){\r\n\t\t\thistory.push('/channels/getting-started')\r\n\t\t\tresetIsChannelAddedValue()\r\n\t\t}\r\n\t\t\r\n\t}, [errorMessgae, isChannelAddedSuccessfuly])\r\n\r\n\tconst customValidation = value => validate.isChannelNameValid(value) ? true : `The field must not contain spaces.`;\r\n\r\n\tfunction onFormSubmit(event, values) {\r\n\r\n\t\tif(!validate.isChannelNameValid(values.name)) return\r\n\r\n\t\tconst data = {\r\n\t\t\tname: values.name,\r\n\t\t\tsubdomain: values.name.replace(/\\s/g, ''),\r\n\t\t}\r\n\r\n\t\tsetSentStatus(true)\r\n\t\tonAddChannel(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Breadcrumbs\r\n\t\t\t\t\t\ttitle={\"dashboard\"}\r\n\t\t\t\t\t\tbreadcrumbItem={\"create a new project\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"create-form\">\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle className=\"text-center mb-3\">What's the name of your project?</CardTitle>\r\n\t\t\t\t\t\t\t\t<AvForm onValidSubmit={(e, v) => { onFormSubmit(e, v) }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<AvField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your film, show, company name. You can change this later\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tvalidate={{customValidation}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"mt-1 waves-effect waves-light\" color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t{isSent && <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>}\r\n\t\t\t\t\t\t\t\t\t\tCreate Project\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</AvForm>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\terrorMessgae: selectors.common.errorMessage(state),\r\n\tisChannelAddedSuccessfuly: selectors.channels.isChannelAddedSuccessfuly(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonAddChannel: (data) => dispatch(Actions.channels.addChannelRequest(data)),\r\n\tresetIsChannelAddedValue: () => dispatch(Actions.channels.addChannelSucces(false)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withNamespaces()(CreateChannel));\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js",["362"],"\r\nexport const Types = {\r\n  SET_ERROR_NOTIFY: 'SET_ERROR_NOTIFY',\r\n  SET_SUCCESS_NOTIFY: 'SET_SUCCESS_NOTIFY',\r\n}\r\n\r\nconst setErrorNotify = (payload) => ({\r\n  type: Types.SET_ERROR_NOTIFY,\r\n  payload\r\n})\r\n\r\nconst setSuccessNotify = (payload) => ({\r\n  type: Types.SET_SUCCESS_NOTIFY,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  setErrorNotify,\r\n  setSuccessNotify,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js",["363"],"\r\nexport const Types = {\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  \r\n  REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\r\n  REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\r\n  \r\n  FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n\r\n  SEND_NEW_PASSAWORD_REQUEST: 'SEND_NEW_PASSAWORD_REQUEST',\r\n  SEND_NEW_PASSAWORD_SUCCESS: 'SEND_NEW_PASSAWORD_SUCCESS',\r\n\r\n  LOG_OUT: 'LOG_OUT',\r\n\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst loginRequest = (payload) => ({\r\n  type: Types.LOGIN_REQUEST,\r\n  payload\r\n})\r\n\r\nconst loginSucces = (payload) => ({\r\n  type: Types.LOGIN_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst registerUserRequest = (payload) => ({\r\n  type: Types.REGISTER_USER_REQUEST,\r\n  payload\r\n})\r\n\r\nconst registerUserSucces = (payload) => ({\r\n  type: Types.REGISTER_USER_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordRequest = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_REQUEST,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordSuccess = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst logOut = () => ({\r\n  type: Types.LOG_OUT\r\n})\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\nconst sendNewPasswordRequest = (payload) => ({\r\n  type: Types.SEND_NEW_PASSAWORD_REQUEST,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  loginRequest,\r\n  loginSucces,\r\n  registerUserRequest,\r\n  registerUserSucces,\r\n  forgotPasswordRequest,\r\n  forgotPasswordSuccess,\r\n  logOut,\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n  sendNewPasswordRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js",["364"],"\r\nexport const Types = {\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\n\r\nexport default {\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js",["365"],"\r\nexport const Types = {\r\n  ADD_CHANNEL_REQUEST: 'ADD_CHANNEL_REQUEST',\r\n  ADD_CHANNEL_SUCCESS: 'ADD_CHANNEL_SUCCESS',\r\n  \r\n  GET_CHANNELS_REQUEST: 'GET_CHANNELS_REQUEST',\r\n  GET_CHANNELS_SUCCESS: 'GET_CHANNELS_SUCCESS',\r\n  \r\n  SET_ACTIVE_CHANNEL: 'SET_ACTIVE_CHANNEL',\r\n  \r\n  DELETE_CHANNEL_REQUEST: 'DELETE_CHANNEL_REQUEST',\r\n\r\n  UPDATE_CHANNEL_REQUEST: 'UPDATE_CHANNEL_REQUEST',\r\n}\r\n\r\nconst addChannelRequest = (payload) => ({\r\n  type: Types.ADD_CHANNEL_REQUEST,\r\n  payload\r\n})\r\n\r\nconst addChannelSucces = (payload) => ({\r\n  type: Types.ADD_CHANNEL_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst getChannelsRequest = () => ({\r\n  type: Types.GET_CHANNELS_REQUEST,\r\n})\r\n\r\nconst getChannelsSuccess = (payload) => ({\r\n  type: Types.GET_CHANNELS_SUCCESS,\r\n  payload,\r\n})\r\n\r\nconst setActiveChannel = (payload) => ({\r\n  type: Types.SET_ACTIVE_CHANNEL,\r\n  payload,\r\n})\r\n\r\nconst deleteChannelRequest = (payload) => ({\r\n  type: Types.DELETE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\nconst updateChannelRequest = (payload) => ({\r\n  type: Types.UPDATE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\n\r\nexport default {\r\n  addChannelRequest,\r\n  addChannelSucces,\r\n  getChannelsRequest,\r\n  getChannelsSuccess,\r\n  setActiveChannel,\r\n  deleteChannelRequest,\r\n  updateChannelRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js",["366"],"export const Types = {\r\n  ADD_PLAYLIST_REQUEST: \"ADD_PLAYLIST_REQUEST\",\r\n  ADD_PLAYLIST_SUCCESS: \"ADD_PLAYLIST_SUCCESS\",\r\n\r\n  GET_PLAYLISTS_REQUEST: \"GET_PLAYLISTS_REQUEST\",\r\n  GET_PLAYLISTS_SUCCESS: \"GET_PLAYLISTS_SUCCESS\",\r\n\r\n  GET_ONE_PLAYLIST_REQUEST: \"GET_ONE_PLAYLIST_REQUEST\",\r\n  GET_ONE_PLAYLIST_SUCCESS: \"GET_ONE_PLAYLIST_SUCCESS\",\r\n\r\n  DELETE_PLAYLIST_REQUEST: \"DELETE_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_PLAYLIST_REQUEST: \"UPDATE_PLAYLIST_REQUEST\",\r\n\r\n  \r\n\r\n};\r\n\r\nconst addPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addPlaylistSuccess = () => ({\r\n  type: Types.ADD_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getPlaylistsRequest = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst getPlaylistsSuccess = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getOnePlaylistRequest = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst getOnePlaylistSuccess = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst deletePlaylistRequest = (payload) => ({\r\n  type: Types.DELETE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updatePlaylistRequest = (payload) => ({\r\n  type: Types.UPDATE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addPlaylistRequest,\r\n  addPlaylistSuccess,\r\n  getPlaylistsRequest,\r\n  getPlaylistsSuccess,\r\n  getOnePlaylistRequest,\r\n  getOnePlaylistSuccess,\r\n  deletePlaylistRequest,\r\n  updatePlaylistRequest,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js",["367"],"import authorization from './authorization'\r\nimport profile from './profile'\r\nimport common from './common'\r\nimport channels from './channels'\r\nimport playlists from './playlists'\r\nimport videos from './videos'\r\n\r\nexport default {\r\n    authorization,\r\n    profile,\r\n    common,\r\n    channels,\r\n    playlists,\r\n    videos\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js",["368"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\Videos.jsx",["369","370"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\Playlists.jsx",["371"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Form,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport EmptyPlaylists from \"./EmptyPlaylists\";\r\nimport DeletePlaylistModal from \"./DeletePlaylistModal\";\r\nimport CreatePlaylist from \"./CreatePlaylist\";\r\n\r\nconst Playlists = (props) => {\r\n  const {\r\n    characters,\r\n    changePagePlaylist,\r\n    checkedItems,\r\n    toggleDelete,\r\n    checkName,\r\n    setCheckName,\r\n    modalDelete,\r\n    onPlaylistDelete,\r\n    onGetPlaylist,\r\n    activeChannel,\r\n    setChekedItems,\r\n    handleOnDragEnd,\r\n    handleChange,\r\n    updateCharacters,\r\n    playlists,\r\n    defaultChannel,\r\n    onAddPlaylist,\r\n    onUpdatePlaylist,\r\n    changePlaylist,\r\n    setChangePlaylist,\r\n    valueButton,\r\n    editNamePlaylist,\r\n    setEditNamePlaylist,\r\n    editDescriptionPlaylist,\r\n    setEditDescriptionPlaylist,\r\n    modalSave,\r\n    setModalSave,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (playlists === null) {\r\n      onGetPlaylist({ id: defaultChannel?.id || \"1\" });\r\n    }\r\n    if (\r\n      characters === null ||\r\n      playlists.length !== characters.length ||\r\n      checkName !== editNamePlaylist\r\n    ) {\r\n      updateCharacters(playlists);\r\n    }\r\n  }, [defaultChannel, playlists]);\r\n\r\n  return (\r\n    <Card className=\"flex-column align-items-start\">\r\n      {changePlaylist ? (\r\n        <CardBody className=\"w-100\">\r\n          {\" \"}\r\n          <CreatePlaylist\r\n            {...{\r\n              activeChannel,\r\n              onAddPlaylist,\r\n              setChangePlaylist,\r\n              onGetPlaylist,\r\n              valueButton,\r\n              onUpdatePlaylist,\r\n              setCheckName,\r\n              checkName,\r\n              modalSave,\r\n              setModalSave,\r\n              editNamePlaylist,\r\n              setEditNamePlaylist,\r\n              editDescriptionPlaylist,\r\n              setEditDescriptionPlaylist,\r\n              setChekedItems,\r\n              checkedItems\r\n            }}\r\n          />\r\n        </CardBody>\r\n      ) : (\r\n        <CardBody className=\"w-100\">\r\n          <CardTitle>Playlists</CardTitle>\r\n          <CardSubtitle className=\"mb-3\">\r\n            {characters?.length} Total\r\n          </CardSubtitle>\r\n          <div className=\"btn-toolbar py-3\" role=\"toolbar\">\r\n            <Button\r\n              color=\"primary mr-2\"\r\n              onClick={changePagePlaylist}\r\n              className=\"btn btn-primary waves-light waves-effect\"\r\n              value=\"newPlaylist\"\r\n            >\r\n              <i className=\"fa fa-plus-circle mr-1\"></i> Create Playlist\r\n            </Button>\r\n            <Button\r\n              color=\"primary mr-2\"\r\n              onClick={changePagePlaylist}\r\n              className=\"btn btn-primary waves-light waves-effect\"\r\n              value=\"editPlaylist\"\r\n              disabled={checkedItems.length === 0 || checkedItems.length > 1}\r\n            >\r\n              Edit <i className=\"mdi mdi-dots-vertical ml-2 dots\"></i>\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              color=\"primary\"\r\n              onClick={toggleDelete}\r\n              className=\"btn btn-primary waves-light waves-effect\"\r\n              disabled={checkedItems.length === 0}\r\n            >\r\n              {\" \"}\r\n              Delete<i className=\"far fa-trash-alt ml-2\"></i>\r\n            </Button>\r\n            <DeletePlaylistModal\r\n              {...{\r\n                checkName,\r\n                checkedItems,\r\n                setCheckName,\r\n                modalDelete,\r\n                toggleDelete,\r\n                onPlaylistDelete,\r\n                onGetPlaylist,\r\n                activeChannel,\r\n                setChekedItems,\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {characters?.length === 0 ? (\r\n            <EmptyPlaylists />\r\n          ) : (\r\n            <Form>\r\n              <DragDropContext\r\n                onDragEnd={(e) =>\r\n                  handleOnDragEnd(e, characters, updateCharacters)\r\n                }\r\n              >\r\n                <Droppable droppableId=\"characters\">\r\n                  {(provided) => (\r\n                    <ul\r\n                      className=\"message-list characters\"\r\n                      {...provided.droppableProps}\r\n                      ref={provided.innerRef}\r\n                    >\r\n                      {characters &&\r\n                        characters?.map((p, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={p.id}\r\n                              draggableId={String(p.name)}\r\n                              index={index}\r\n                            >\r\n                              {(provided) => (\r\n                                <li\r\n                                  ref={provided.innerRef}\r\n                                  {...provided.draggableProps}\r\n                                  {...provided.dragHandleProps}\r\n                                >\r\n                                  <Label className=\"check d-flex align-items-center ml-4\">\r\n                                    <Input\r\n                                      type=\"checkbox\"\r\n                                      name={p.name}\r\n                                      checked={checkedItems.includes(p.id)}\r\n                                      onChange={() =>\r\n                                        handleChange(\r\n                                          p,\r\n                                          checkedItems,\r\n                                          setChekedItems\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                    <span className=\"title mr-3\">\r\n                                      {index + 1}\r\n                                    </span>\r\n                                    {p.name}\r\n                                    <div className=\"col-mail col-mail-2\">\r\n                                      <div className=\"date\">4 items</div>\r\n                                    </div>\r\n                                  </Label>\r\n                                </li>\r\n                              )}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                      {provided.placeholder}\r\n                    </ul>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </Form>\r\n          )}\r\n        </CardBody>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\DeletePlaylistModal.jsx",["372","373","374"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\CreatePlaylist.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Playlists\\EmptyPlaylists.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\EmptyVideos.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js",["375"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.playlists)\r\nconst playlists = deepEqualSelector(self, data => data.playlists)\r\nconst onePlaylist = deepEqualSelector(self, data => data.onePlaylist)\r\n\r\nexport default {\r\n  playlists,\r\n  onePlaylist,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js",["376"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.channels)\r\nconst channels = deepEqualSelector(self, data => data.channels)\r\nconst activeChannel = deepEqualSelector(self, data => data.activeChannel)\r\nconst isChannelAddedSuccessfuly = deepEqualSelector(self, data => data.isChannelAddedSuccessfuly)\r\n\r\nexport default {\r\n  channels,\r\n  activeChannel,\r\n  isChannelAddedSuccessfuly,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js",["377"],"import { createSelectorCreator, defaultMemoize, createSelector } from 'reselect'\r\nimport isEqual from 'lodash.isequal'\r\n\r\nexport const selector = createSelector((s) => s, s => s)\r\nconst common = createSelector(selector, data => data.common) \r\nconst errorMessage = createSelector(common, data => data.errorMessage) \r\nconst successMessage = createSelector(common, data => data.successMessage) \r\n\r\nexport const deepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    isEqual,\r\n)\r\n\r\nexport default {\r\n    errorMessage,\r\n    successMessage,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js",["378"],"import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst authorization = createSelector(selector, data => data.authorization)\r\nconst authData = deepEqualSelector(authorization, data => data.authData)\r\n\r\nexport default {\r\n  authData,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js",["379"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst profile = deepEqualSelector(selector, data => data.profile)\r\nconst user = deepEqualSelector(profile, data => data.user)\r\n\r\nexport default {\r\n  user,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js",["380"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js",["381"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js",["382"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  addChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=AddChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  deleteChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=DeleteChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify(data)\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  updateChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateChannel&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  \r\n  getChannels: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=GetChannels&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js",["383"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  getUserProfile: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `?action=GetUserProfile&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(queryString, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  changeUserProfile: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateUserProfile&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js",["384"],"import { axiosInstance } from './index'\r\n\r\nexport default {\r\n  logIn: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Login', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  registerUser: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Register', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  forgotPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=ForgotPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  newPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=NewPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js",["385"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.videos);\r\nconst videos = deepEqualSelector(self, (data) => data.videos);\r\nconst videosByPlaylist = deepEqualSelector(\r\n  self,\r\n  (data) => data.videosByPlaylist\r\n);\r\n\r\nexport default {\r\n  videos,\r\n  videosByPlaylist,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx",["386","387"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\CreateVideos.jsx",["388"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Videos\\DeleteVideoModal.jsx",["389"],{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","severity":1,"message":"395","line":53,"column":41,"nodeType":"396","messageId":"397","endLine":53,"endColumn":43},{"ruleId":"394","severity":1,"message":"395","line":53,"column":73,"nodeType":"396","messageId":"397","endLine":53,"endColumn":75},{"ruleId":"398","severity":1,"message":"399","line":56,"column":5,"nodeType":"400","endLine":56,"endColumn":15,"suggestions":"401"},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":17,"endColumn":2},{"ruleId":"398","severity":1,"message":"405","line":28,"column":6,"nodeType":"400","endLine":28,"endColumn":36,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":27,"column":5,"nodeType":"409","messageId":"410","endLine":27,"endColumn":11},{"ruleId":"398","severity":1,"message":"411","line":152,"column":6,"nodeType":"400","endLine":152,"endColumn":27,"suggestions":"412"},{"ruleId":"398","severity":1,"message":"413","line":32,"column":5,"nodeType":"400","endLine":32,"endColumn":46,"suggestions":"414"},{"ruleId":"402","severity":1,"message":"403","line":18,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":82,"column":1,"nodeType":"404","endLine":95,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":29,"column":1,"nodeType":"404","endLine":34,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":51,"column":1,"nodeType":"404","endLine":59,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":58,"column":1,"nodeType":"404","endLine":67,"endColumn":3},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":15,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":54,"column":1,"nodeType":"404","endLine":63,"endColumn":3},{"ruleId":"398","severity":1,"message":"415","line":65,"column":6,"nodeType":"400","endLine":65,"endColumn":24,"suggestions":"416"},{"ruleId":"417","severity":1,"message":"418","line":212,"column":37,"nodeType":"419","endLine":215,"endColumn":39},{"ruleId":"398","severity":1,"message":"420","line":59,"column":6,"nodeType":"400","endLine":59,"endColumn":33,"suggestions":"421"},{"ruleId":"407","severity":1,"message":"422","line":2,"column":10,"nodeType":"409","messageId":"410","endLine":2,"endColumn":23},{"ruleId":"407","severity":1,"message":"423","line":4,"column":10,"nodeType":"409","messageId":"410","endLine":4,"endColumn":14},{"ruleId":"424","severity":1,"message":"425","line":29,"column":27,"nodeType":"426","messageId":"427","endLine":29,"endColumn":45,"fix":"428"},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":11,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":9,"column":1,"nodeType":"404","endLine":13,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":14,"column":1,"nodeType":"404","endLine":17,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":7,"column":1,"nodeType":"404","endLine":9,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":7,"column":1,"nodeType":"404","endLine":9,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":131,"endColumn":3},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":127,"endColumn":3},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":96,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":49,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":3,"column":1,"nodeType":"404","endLine":63,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":14,"endColumn":3},{"ruleId":"429","severity":1,"message":"430","line":21,"column":19,"nodeType":"431","endLine":23,"endColumn":22},{"ruleId":"429","severity":1,"message":"430","line":37,"column":19,"nodeType":"431","endLine":39,"endColumn":22},{"ruleId":"432","severity":1,"message":"433","line":93,"column":49,"nodeType":"434","messageId":"435","endLine":93,"endColumn":51},{"ruleId":"407","severity":1,"message":"436","line":16,"column":5,"nodeType":"409","messageId":"410","endLine":16,"endColumn":21},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'lastLoactionPathname'. Either include them or remove the dependency array.","ArrayExpression",["439"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'hash', 'isSent', and 'onSendNewPassword'. Either include them or remove the dependency array.",["440"],"no-unused-vars","'videos' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'defaultChannel'. Either include it or remove the dependency array.",["441"],"React Hook useEffect has missing dependencies: 'history' and 'resetIsChannelAddedValue'. Either include them or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'checkNameVideos', 'dragVIdeo', 'editNameVideos', and 'updateDragVideo'. Either include them or remove the dependency array.",["443"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'characters', 'checkName', 'editNamePlaylist', 'onGetPlaylist', and 'updateCharacters'. Either include them or remove the dependency array.",["444"],"'axiosInstance' is defined but never used.","'sha1' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property id.","MemberExpression","unexpectedWhitespace",{"range":"445","text":"446"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'videosByPlaylist' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},[730,733],"?.","Update the dependencies array to be: [channels, history, lastLoactionPathname]",{"range":"459","text":"460"},"Update the dependencies array to be: [successMessage, errorMessage, hash, isSent, onSendNewPassword]",{"range":"461","text":"462"},"Update the dependencies array to be: [defaultChannel, props.activeChannel]",{"range":"463","text":"464"},"Update the dependencies array to be: [errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",{"range":"465","text":"466"},"Update the dependencies array to be: [checkNameVideos, dragVIdeo, editNameVideos, updateDragVideo, videosByPlaylist]",{"range":"467","text":"468"},"Update the dependencies array to be: [characters, checkName, defaultChannel, editNamePlaylist, onGetPlaylist, playlists, updateCharacters]",{"range":"469","text":"470"},[1807,1817],"[channels, history, lastLoactionPathname]",[1033,1063],"[successMessage, errorMessage, hash, isSent, onSendNewPassword]",[4818,4839],"[defaultChannel, props.activeChannel]",[913,954],"[errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",[1473,1491],"[checkNameVideos, dragVIdeo, editNameVideos, updateDragVideo, videosByPlaylist]",[1332,1359],"[characters, checkName, defaultChannel, editNamePlaylist, onGetPlaylist, playlists, updateCharacters]"]