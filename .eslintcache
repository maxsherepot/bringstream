[{"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx":"1","F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js":"2","F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx":"3","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx":"4","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js":"5","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js":"6","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js":"7","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js":"8","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx":"9","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx":"10","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx":"11","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx":"12","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx":"13","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx":"14","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx":"15","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx":"16","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js":"17","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js":"18","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx":"19","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js":"20","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js":"21","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js":"22","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js":"23","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js":"24","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js":"25","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js":"26","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js":"27","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js":"28","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js":"29","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js":"30","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js":"31","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js":"32","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js":"33","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js":"34","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js":"35","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js":"36","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js":"37","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js":"38","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx":"39","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js":"40","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js":"41","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js":"42","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js":"43","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js":"44","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js":"45","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js":"46","F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js":"47","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js":"48","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js":"49","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx":"50","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx":"51","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\TabPanel.jsx":"52","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx":"53","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js":"54","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js":"55","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js":"56","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js":"57","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js":"58","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js":"59","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js":"60","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js":"61","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js":"62","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js":"63","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js":"64","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js":"65","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js":"66","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js":"67","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx":"68","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CheckItems.jsx":"69","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CreateEdit.jsx":"70","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\DeleteModal.jsx":"71","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\EmptyMessage.jsx":"72","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js":"73","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Pagination\\Pagination.jsx":"74","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIVideo.jsx":"75","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIPlaylist.jsx":"76","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js":"77","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js":"78","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js":"79","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js":"80","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js":"81","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\FormaData.jsx":"82","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\LanguagesTabs.jsx":"83","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js":"84"},{"size":386,"mtime":1607366235506,"results":"85","hashOfConfig":"86"},{"size":1127,"mtime":1607366235506,"results":"87","hashOfConfig":"86"},{"size":2832,"mtime":1607462117727,"results":"88","hashOfConfig":"86"},{"size":1675,"mtime":1607366235493,"results":"89","hashOfConfig":"86"},{"size":478,"mtime":1607366235543,"results":"90","hashOfConfig":"86"},{"size":1626,"mtime":1607366235526,"results":"91","hashOfConfig":"86"},{"size":6580,"mtime":1607366235525,"results":"92","hashOfConfig":"86"},{"size":398,"mtime":1607367815086,"results":"93","hashOfConfig":"86"},{"size":3979,"mtime":1607366235512,"results":"94","hashOfConfig":"86"},{"size":4993,"mtime":1607366235513,"results":"95","hashOfConfig":"86"},{"size":3978,"mtime":1607366235511,"results":"96","hashOfConfig":"86"},{"size":4462,"mtime":1607366235513,"results":"97","hashOfConfig":"86"},{"size":9608,"mtime":1607461889337,"results":"98","hashOfConfig":"86"},{"size":3090,"mtime":1607366235514,"results":"99","hashOfConfig":"86"},{"size":2905,"mtime":1607366235515,"results":"100","hashOfConfig":"86"},{"size":4158,"mtime":1607366235516,"results":"101","hashOfConfig":"86"},{"size":476,"mtime":1607366884819,"results":"102","hashOfConfig":"86"},{"size":2751,"mtime":1607366857974,"results":"103","hashOfConfig":"86"},{"size":10238,"mtime":1607983385988,"results":"104","hashOfConfig":"86"},{"size":2980,"mtime":1607366235498,"results":"105","hashOfConfig":"86"},{"size":1978,"mtime":1607366235523,"results":"106","hashOfConfig":"86"},{"size":2911,"mtime":1607366235524,"results":"107","hashOfConfig":"86"},{"size":3023,"mtime":1607366235523,"results":"108","hashOfConfig":"86"},{"size":1564,"mtime":1607366235522,"results":"109","hashOfConfig":"86"},{"size":4787,"mtime":1607366235521,"results":"110","hashOfConfig":"86"},{"size":5920,"mtime":1607366235522,"results":"111","hashOfConfig":"86"},{"size":1007,"mtime":1607366235493,"results":"112","hashOfConfig":"86"},{"size":3136,"mtime":1607366235523,"results":"113","hashOfConfig":"86"},{"size":2147,"mtime":1607366235539,"results":"114","hashOfConfig":"86"},{"size":798,"mtime":1607366235547,"results":"115","hashOfConfig":"86"},{"size":362,"mtime":1607366235543,"results":"116","hashOfConfig":"86"},{"size":1497,"mtime":1607435710121,"results":"117","hashOfConfig":"86"},{"size":1240,"mtime":1607366235540,"results":"118","hashOfConfig":"86"},{"size":1176,"mtime":1607366235544,"results":"119","hashOfConfig":"86"},{"size":1625,"mtime":1607977399083,"results":"120","hashOfConfig":"86"},{"size":323,"mtime":1607367363366,"results":"121","hashOfConfig":"86"},{"size":1533,"mtime":1607366235544,"results":"122","hashOfConfig":"86"},{"size":156,"mtime":1607366235505,"results":"123","hashOfConfig":"86"},{"size":1125,"mtime":1607366235516,"results":"124","hashOfConfig":"86"},{"size":2792,"mtime":1607977407965,"results":"125","hashOfConfig":"86"},{"size":493,"mtime":1607366235496,"results":"126","hashOfConfig":"86"},{"size":11001,"mtime":1607366235494,"results":"127","hashOfConfig":"86"},{"size":18856,"mtime":1607684098772,"results":"128","hashOfConfig":"86"},{"size":2594,"mtime":1607366235530,"results":"129","hashOfConfig":"86"},{"size":2280,"mtime":1607366235529,"results":"130","hashOfConfig":"86"},{"size":3434,"mtime":1607441461295,"results":"131","hashOfConfig":"86"},{"size":1252,"mtime":1607366235533,"results":"132","hashOfConfig":"86"},{"size":4350,"mtime":1607366235545,"results":"133","hashOfConfig":"86"},{"size":1975,"mtime":1607366235521,"results":"134","hashOfConfig":"86"},{"size":606,"mtime":1607412790311,"results":"135","hashOfConfig":"86"},{"size":1431,"mtime":1607935729801,"results":"136","hashOfConfig":"86"},{"size":6086,"mtime":1608039761424,"results":"137","hashOfConfig":"86"},{"size":6669,"mtime":1607773933004,"results":"138","hashOfConfig":"86"},{"size":578,"mtime":1607366235544,"results":"139","hashOfConfig":"86"},{"size":542,"mtime":1607366235543,"results":"140","hashOfConfig":"86"},{"size":471,"mtime":1607366235547,"results":"141","hashOfConfig":"86"},{"size":583,"mtime":1607366235540,"results":"142","hashOfConfig":"86"},{"size":737,"mtime":1607366235541,"results":"143","hashOfConfig":"86"},{"size":579,"mtime":1607435526989,"results":"144","hashOfConfig":"86"},{"size":650,"mtime":1607977473073,"results":"145","hashOfConfig":"86"},{"size":3525,"mtime":1607366235494,"results":"146","hashOfConfig":"86"},{"size":360,"mtime":1607367231400,"results":"147","hashOfConfig":"86"},{"size":491,"mtime":1607366235535,"results":"148","hashOfConfig":"86"},{"size":551,"mtime":1607366235536,"results":"149","hashOfConfig":"86"},{"size":286,"mtime":1607366235535,"results":"150","hashOfConfig":"86"},{"size":262,"mtime":1607366235538,"results":"151","hashOfConfig":"86"},{"size":456,"mtime":1607977735346,"results":"152","hashOfConfig":"86"},{"size":2655,"mtime":1607366235496,"results":"153","hashOfConfig":"86"},{"size":3362,"mtime":1608039530024,"results":"154","hashOfConfig":"86"},{"size":2907,"mtime":1607898493741,"results":"155","hashOfConfig":"86"},{"size":1870,"mtime":1607947477204,"results":"156","hashOfConfig":"86"},{"size":1031,"mtime":1608038021842,"results":"157","hashOfConfig":"86"},{"size":433,"mtime":1607366959335,"results":"158","hashOfConfig":"86"},{"size":770,"mtime":1608013179486,"results":"159","hashOfConfig":"86"},{"size":2879,"mtime":1608038873869,"results":"160","hashOfConfig":"86"},{"size":1342,"mtime":1607937386977,"results":"161","hashOfConfig":"86"},{"size":1548,"mtime":1607366235504,"results":"162","hashOfConfig":"86"},{"size":3100,"mtime":1607366235502,"results":"163","hashOfConfig":"86"},{"size":4137,"mtime":1607982550022,"results":"164","hashOfConfig":"86"},{"size":1644,"mtime":1607366235502,"results":"165","hashOfConfig":"86"},{"size":3866,"mtime":1607897277908,"results":"166","hashOfConfig":"86"},{"size":4574,"mtime":1607934253661,"results":"167","hashOfConfig":"86"},{"size":3253,"mtime":1607879244479,"results":"168","hashOfConfig":"86"},{"size":3993,"mtime":1607366235505,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"zk08hy",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"172"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"172"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"172"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"172"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"172"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"172"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"172"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"172"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"172"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"172"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"172"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"172"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"172"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"172"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"172"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"F:\\Програмування\\bringstream\\channel-admin-test\\src\\index.jsx",[],["365","366"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\i18n.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\routes.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Notify.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Utility\\pages-404.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\index.js",["367","368","369"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport StackedColumnChart from \"./StackedColumnChart\";\r\nimport modalimage1 from \"../../assets/images/product/img-7.png\";\r\nimport modalimage2 from \"../../assets/images/product/img-4.png\";\r\nimport WelcomeComp from \"./WelcomeComp\";\r\nimport MonthlyEarning from \"./MonthlyEarning\";\r\nimport SocialSource from \"./SocialSource\";\r\nimport ActivityComp from \"./ActivityComp\";\r\nimport TopCities from \"./TopCities\";\r\nimport LatestTranaction from \"./LatestTranaction\";\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { useLastLocation } from 'react-router-last-location';\r\nimport selectors from '../../selectors';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tContainer,\r\n\tRow,\r\n\tCol,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tMedia,\r\n\tTable,\r\n} from \"reactstrap\";\r\n\r\nconst Dashboard = (props) => {\r\n\tconst { channels, history } = props\r\n\tconst [modal, setmodal] = useState(false);\r\n\r\n\tconst reports = [\r\n\t\t{ title: \"Orders\", iconClass: \"bx-copy-alt\", description: \"1,235\" },\r\n\t\t{ title: \"Revenue\", iconClass: \"bx-archive-in\", description: \"$35, 723\" },\r\n\t\t{ title: \"Average Price\", iconClass: \"bx-purchase-tag-alt\", description: \"$16.2\" }\r\n\t];\r\n\tconst email = [\r\n\t\t{ title: \"Week\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Month\", linkto: \"#\", isActive: false },\r\n\t\t{ title: \"Year\", linkto: \"#\", isActive: true }\r\n\t];\r\n\r\n\tconst lastLocation = useLastLocation()\r\n\tconst lastLoactionPathname = lastLocation?.pathname\r\n\r\n\tuseEffect(()=>{\r\n\t\t\r\n\t\tif (lastLoactionPathname === '/login' || lastLoactionPathname === '/' && channels?.length === 0) {\r\n\t\t\thistory.push('/channels/create')\r\n\t\t}\r\n\t}, [channels])\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\r\n\t\t\t\t\t{/* Render Breadcrumb */}\r\n\t\t\t\t\t<Breadcrumbs title={props.t('Dashboard')} breadcrumbItem={props.t('Dashboard')} />\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<WelcomeComp />\r\n\t\t\t\t\t\t\t<MonthlyEarning />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"8\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t{/* Reports Render */}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treports.map((report, key) =>\r\n\t\t\t\t\t\t\t\t\t\t<Col md=\"4\" key={\"_col_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card className=\"mini-stats-wid\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Media body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-medium\">{report.title}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{report.description}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mini-stat-icon avatar-sm rounded-circle bg-primary align-self-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"avatar-title\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className={\"bx \" + report.iconClass + \" font-size-24\"}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<CardTitle className=\"mb-4 float-sm-left\">\r\n\t\t\t\t\t\t\t\t\t\tEmail Sent\r\n                                        </CardTitle>\r\n\t\t\t\t\t\t\t\t\t<div className=\"float-sm-right\">\r\n\t\t\t\t\t\t\t\t\t\t<ul className=\"nav nav-pills\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\temail.map((mail, key) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"nav-item\" key={\"_li_\" + key}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className={mail.isActive ? \"nav-link active\" : \"nav-link\"} to={mail.linkto}>{mail.title}</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t\t\t<StackedColumnChart />\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<SocialSource />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<ActivityComp />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col xl=\"4\">\r\n\t\t\t\t\t\t\t<TopCities />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"12\">\r\n\t\t\t\t\t\t\t<LatestTranaction />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t\t<Modal isOpen={modal} role=\"dialog\" autoFocus={true} centered={true} className=\"exampleModal\" tabindex=\"-1\" toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t<ModalHeader toggle={() => { setmodal(!modal); }}>\r\n\t\t\t\t\t\tOrder Details\r\n                        </ModalHeader >\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<p className=\"mb-2\">Product id: <span className=\"text-primary\">#SK2540</span></p>\r\n\t\t\t\t\t\t<p className=\"mb-4\">Billing Name: <span className=\"text-primary\">Neal Matthews</span></p>\r\n\r\n\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<Table className=\"table table-centered table-nowrap\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Product Name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Price</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage1} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Wireless Headphone (Black)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 225 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 255</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={modalimage2} alt=\"\" className=\"avatar-sm\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"text-truncate font-size-14\">Hoodie (Blue)</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"text-muted mb-0\">$ 145 x 1</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 145</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Sub Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Shipping:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>Free</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"m-0 text-right\">Total:</h6>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>$ 400</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button type=\"button\" color=\"secondary\" onClick={() => { setmodal(!modal); }}>Close</Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n\treturn {\r\n\t\tchannels: selectors.channels.channels(state),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatetoProps)(withNamespaces()(Dashboard));","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\actions.js",["370"],"import authorization from './authorization/actions'\r\nimport common from './common/actions'\r\nimport profile from './profile/actions'\r\nimport channels from './channels/actions'\r\nimport playlists from './playlists/actions'\r\nimport videos from './videos/actions'\r\n\r\nexport * from './layout/actions';\r\n\r\nexport default {\r\n  authorization,\r\n  common,\r\n  profile,\r\n  channels,\r\n  playlists,\r\n  videos\r\n}\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Login.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\Register.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\ForgetPassword.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\PasswordRecovery.jsx",["371"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Alert, Card, CardBody, Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport profile from \"../../assets/images/profile-img.png\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors'\r\n\r\nconst ForgetPasswordPage = React.memo((props) => {\r\n  const { history, onSendNewPassword, successMessage, errorMessage } = props\r\n  const [isSent, setSentStatus] = useState(null)\r\n  const [responseMessage, setResponseMessage] = useState('')\r\n\r\n  const path = history.location.pathname.split('/');\r\n  const hash = path[path.length - 1];\r\n\r\n  useEffect(() => {\r\n    if (hash && isSent === null) {\r\n      onSendNewPassword({\"hash\": hash})\r\n      setSentStatus(true)\r\n    }\r\n\r\n    if (successMessage || errorMessage) {\r\n      setResponseMessage(successMessage || errorMessage)\r\n      setSentStatus(false)\r\n    }\r\n  }, [successMessage, errorMessage])\r\n\r\n  const renderCurrentMessage = () => {\r\n    if (isSent === true) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">Please wait</span>\r\n          <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (isSent === false) {\r\n      return (\r\n        <div className=\"text-center mb-4\">\r\n          <span className=\"mr-1\">{responseMessage}</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"home-btn d-none d-sm-block\">\r\n        <Link to=\"/\" className=\"text-dark\"><i className=\"fas fa-home h2\"></i></Link>\r\n      </div>\r\n      <div className=\"account-pages my-5 pt-sm-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={8} lg={6} xl={5}>\r\n              <Card className=\"overflow-hidden\">\r\n                <div className=\"bg-soft-primary\">\r\n                  <Row>\r\n                    <Col className=\"col-7\">\r\n                      <div className=\"text-primary p-4\">\r\n                        <h5 className=\"text-primary\">Welcome Back !</h5>\r\n                        <p>Sign in to continue to Bring Stream.</p>\r\n                      </div>\r\n                    </Col>\r\n                    <Col className=\"col-5 align-self-end\">\r\n                      <img src={profile} alt=\"\" className=\"img-fluid\" />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <CardBody className=\"pt-0\">\r\n                  <div>\r\n                    <Link to=\"/\">\r\n                      <div className=\"avatar-md profile-user-wid mb-4\">\r\n                        <span className=\"avatar-title rounded-circle bg-light\">\r\n                          <img src={logo} alt=\"\" className=\"rounded-circle\" height=\"34\" />\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"p-2\">\r\n                    {props.forgetError && props.forgetError ? (\r\n                      <Alert color=\"danger\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetError}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {props.forgetSuccessMsg ? (\r\n                      <Alert color=\"success\" style={{ marginTop: \"13px\" }}>\r\n                        {props.forgetSuccessMsg}\r\n                      </Alert>\r\n                    ) : null}\r\n                    {renderCurrentMessage()}\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n              <div className=\"mt-5 text-center\">\r\n                <p> Go back to <Link to=\"/login\" className=\"font-weight-medium text-primary\">Login</Link></p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n})\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMessage: selectors.common.errorMessage(state),\r\n  successMessage: selectors.common.successMessage(state),\r\n})\r\n\r\nconst mapDispathcToProps = dispatch => ({\r\n  onForgotPassword: (data) => dispatch(Actions.authorization.forgotPasswordRequest(data)),\r\n  onSendNewPassword: (value) => dispatch(Actions.authorization.sendNewPasswordRequest(value)),\r\n})\r\n\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispathcToProps)(ForgetPasswordPage)\r\n);\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\ChannelSettings.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Authentication\\UserProfile.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\CreateChannel.jsx",["372"],"import React, { useEffect, useState } from 'react';\r\nimport { CardBody, CardTitle, Button, Container } from 'reactstrap';\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { withNamespaces } from 'react-i18next';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../store/actions'\r\nimport selectors from './../../selectors/index'\r\nimport { validate } from './../../helpers/validation'\r\nimport \"./channels.scss\";\r\n\r\nconst CreateChannel = (props) => {\r\n\t\r\n\tconst { \r\n\t\tonAddChannel, \r\n\t\terrorMessgae, \r\n\t\thistory, \r\n\t\tisChannelAddedSuccessfuly,\r\n\t\tresetIsChannelAddedValue,\r\n\t } = props\r\n\t \r\n\tconst [isSent, setSentStatus] = useState(false)\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetSentStatus(false)\r\n\r\n\t\tif(isChannelAddedSuccessfuly){\r\n\t\t\thistory.push('/channels/getting-started')\r\n\t\t\tresetIsChannelAddedValue()\r\n\t\t}\r\n\t\t\r\n\t}, [errorMessgae, isChannelAddedSuccessfuly])\r\n\r\n\tconst customValidation = value => validate.isChannelNameValid(value) ? true : `The field must not contain spaces.`;\r\n\r\n\tfunction onFormSubmit(event, values) {\r\n\r\n\t\tif(!validate.isChannelNameValid(values.name)) return\r\n\r\n\t\tconst data = {\r\n\t\t\tname: values.name,\r\n\t\t\tsubdomain: values.name.replace(/\\s/g, ''),\r\n\t\t}\r\n\r\n\t\tsetSentStatus(true)\r\n\t\tonAddChannel(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Breadcrumbs\r\n\t\t\t\t\t\ttitle={\"dashboard\"}\r\n\t\t\t\t\t\tbreadcrumbItem={\"create a new project\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"create-form\">\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<CardTitle className=\"text-center mb-3\">What's the name of your project?</CardTitle>\r\n\t\t\t\t\t\t\t\t<AvForm onValidSubmit={(e, v) => { onFormSubmit(e, v) }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<AvField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your film, show, company name. You can change this later\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tvalidate={{customValidation}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"mt-1 waves-effect waves-light\" color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t{isSent && <i className=\"bx bx-loader bx-spin font-size-16 align-middle mr-2\"></i>}\r\n\t\t\t\t\t\t\t\t\t\tCreate Project\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</AvForm>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\terrorMessgae: selectors.common.errorMessage(state),\r\n\tisChannelAddedSuccessfuly: selectors.channels.isChannelAddedSuccessfuly(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tonAddChannel: (data) => dispatch(Actions.channels.addChannelRequest(data)),\r\n\tresetIsChannelAddedValue: () => dispatch(Actions.channels.addChannelSucces(false)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withNamespaces()(CreateChannel));\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\GettingStarted.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\reducers.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Content.jsx",["373","374"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport selectors from \"../../selectors\";\r\nimport Actions from \"../../store/actions\";\r\nimport { withNamespaces } from \"react-i18next\";\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport \"./content.scss\";\r\nimport Upload from \"./Upload/Upload\";\r\nimport TabPanel from \"./Common/TabPanel\";\r\nimport TabButton from \"./TabButton/TabButton\";\r\n\r\nconst Content = (props) => {\r\n  // Get props\r\n  const {\r\n    playlists,\r\n    activeChannel,\r\n    onRemoveVideoFromPlaylist,\r\n    onAddPlaylist,\r\n    onPlaylistDelete,\r\n    onUpdatePlaylist,\r\n    onGetPlaylist,\r\n    onUpdateVideo,\r\n    onAddVideoToPlaylist,\r\n    onGetVideosByPlaylist,\r\n    videosByPlaylist,\r\n    onGetVideos,\r\n    videos,\r\n    count,\r\n  } = props;\r\n\r\n  // State local\r\n  const [changePage, setChangePage] = useState(false);\r\n  const [modalDelete, setModalDelete] = useState(false);\r\n  const [checkName, setCheckName] = useState(\"\");\r\n  const [checkDesc, setCheckDesc] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [valueButton, setValueButton] = useState(\"\");\r\n  const [characters, updateCharacters] = useState(playlists);\r\n  const [checkedItems, setChekedItems] = useState([]);\r\n  const [modalSave, setModalSave] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editDescription, setEditDescription] = useState(\"\");\r\n  const [dragVIdeo, updateDragVideo] = useState(videosByPlaylist);\r\n  const [getPlaylist, setGetPlaylist] = useState(null);\r\n  const [selectedPage, setSelectedPage] = useState(null);\r\n\r\n  // Vallues\r\n  const defaultChannel = JSON.parse(localStorage.getItem(\"channel\"));\r\n  const item = characters?.filter((c) => c.id === checkedItems[0]);\r\n  const itemVideos = dragVIdeo?.filter((v) => v.id === checkedItems[0]);\r\n\r\n  // Handle event\r\n\r\n  // Change page on click Create Playlist || Edit Playlist\r\n  const toForm = (e) => {\r\n    const nameButton = e.target.value;\r\n    switch (nameButton) {\r\n      case \"editPlaylist\":\r\n        setEditName(item[0].name);\r\n        setEditDescription(item[0].description);\r\n        setCheckName(item[0].name);\r\n        setCheckDesc(item[0].description);\r\n        setChangePage(true);\r\n        break;\r\n      case \"newPlaylist\":\r\n        setChangePage(true);\r\n        break;\r\n      case \"editVideo\":\r\n      case \"newVideo\":\r\n        setEditName(itemVideos[0]?.vimeo_name);\r\n        setEditDescription(JSON.parse(itemVideos[0].description)[\"EN\"] || \"\");\r\n        setCheckName(itemVideos[0].vimeo_name);\r\n        setCheckDesc(JSON.parse(itemVideos[0].description)[\"EN\"] || \"\");\r\n        setChangePage(true);\r\n        break;\r\n    }\r\n    setValueButton(nameButton);\r\n  };\r\n\r\n  // Toggle modal window (DELETE)\r\n  const toggleDelete = () => {\r\n    setModalDelete(!modalDelete);\r\n    item.length === 0\r\n      ? setCheckName(itemVideos[0].vimeo_name)\r\n      : setCheckName(item[0].name);\r\n  };\r\n\r\n  // Toggle tab (LEFT PANEL)\r\n  const toggleTab = (tab) => {\r\n    if (checkName !== editName || checkDesc !== editDescription) {\r\n      setModalSave(!modalSave);\r\n    } else {\r\n      if (activeTab !== tab) {\r\n        setActiveTab(tab);\r\n      }\r\n      setChangePage(false);\r\n      setChekedItems([]);\r\n    }\r\n  };\r\n\r\n  // Drag playlist or videos\r\n  function handleOnDragEnd(result, items, setItems) {\r\n    if (!result.destination) return;\r\n\r\n    const getItems = Array.from(items);\r\n    const [reorderedItem] = getItems.splice(result.source.index, 1);\r\n    getItems.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setItems(getItems);\r\n  }\r\n\r\n  // Set & remove checkmark\r\n  const handleChange = (p, checkItems, setCheckItems) => {\r\n    const clickedCategory = checkItems.indexOf(p.id);\r\n    const all = [...checkItems];\r\n\r\n    if (clickedCategory === -1) {\r\n      all.push(p.id);\r\n    } else {\r\n      all.splice(clickedCategory, 1);\r\n    }\r\n    setCheckItems(all);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (defaultChannel !== props.activeChannel) {\r\n      setChekedItems([]);\r\n    }\r\n  }, [props.activeChannel]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <Container fluid>\r\n          <Breadcrumbs title={\"Dashboard\"} breadcrumbItem={\"content\"} />\r\n          <Row className=\"align-items-start\">\r\n            {/* LEFT PANEL */}\r\n            <Col xs=\"12\" sm=\"5\" md=\"4\" lg=\"3\">\r\n              <Card>\r\n                <CardBody>\r\n                  <TabButton\r\n                    {...{ activeTab, toggleTab, characters, dragVIdeo }}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            {/* RIGHT PANEL */}\r\n            <Col xs=\"12\" sm=\"7\" md=\"8\" lg=\"9\">\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <TabPanel\r\n                    {...{\r\n                      characters,\r\n                      dragVIdeo,\r\n                      updateDragVideo,\r\n                      checkedItems,\r\n                      checkName,\r\n                      setCheckName,\r\n                      setCheckDesc,\r\n                      setChekedItems,\r\n                      handleOnDragEnd,\r\n                      handleChange,\r\n                      videosByPlaylist,\r\n                      changePage,\r\n                      setChangePage,\r\n                      editName,\r\n                      editDescription,\r\n                      setEditName,\r\n                      setEditDescription,\r\n                      valueButton,\r\n                      onUpdateVideo,\r\n                      onAddVideoToPlaylist,\r\n                      onGetVideosByPlaylist,\r\n                      getPlaylist,\r\n                      setGetPlaylist,\r\n                      onRemoveVideoFromPlaylist,\r\n                      onGetVideos,\r\n                      videos,\r\n                      modalSave,\r\n                      setModalSave,\r\n                      updateCharacters,\r\n                      item,\r\n                      modalDelete,\r\n                      toggleDelete,\r\n                      onPlaylistDelete,\r\n                      activeChannel,\r\n                      onAddPlaylist,\r\n                      onGetPlaylist,\r\n                      onUpdatePlaylist,\r\n                      activeTab,\r\n                      toForm,\r\n                      defaultChannel,\r\n                      playlists,\r\n                      count,\r\n                      selectedPage,\r\n                      setSelectedPage,\r\n                    }}\r\n                  />\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                  <TabPanel\r\n                    {...{\r\n                      characters,\r\n                      dragVIdeo,\r\n                      updateDragVideo,\r\n                      checkedItems,\r\n                      checkName,\r\n                      setCheckName,\r\n                      setCheckDesc,\r\n                      setChekedItems,\r\n                      handleOnDragEnd,\r\n                      handleChange,\r\n                      videosByPlaylist,\r\n                      changePage,\r\n                      setChangePage,\r\n                      editName,\r\n                      editDescription,\r\n                      setEditName,\r\n                      setEditDescription,\r\n                      valueButton,\r\n                      onUpdateVideo,\r\n                      onAddVideoToPlaylist,\r\n                      onGetVideosByPlaylist,\r\n                      getPlaylist,\r\n                      setGetPlaylist,\r\n                      onRemoveVideoFromPlaylist,\r\n                      onGetVideos,\r\n                      videos,\r\n                      modalSave,\r\n                      setModalSave,\r\n                      updateCharacters,\r\n                      item,\r\n                      modalDelete,\r\n                      toggleDelete,\r\n                      onPlaylistDelete,\r\n                      activeChannel,\r\n                      onAddPlaylist,\r\n                      onGetPlaylist,\r\n                      onUpdatePlaylist,\r\n                      activeTab,\r\n                      toForm,\r\n                      defaultChannel,\r\n                      playlists,\r\n                      count,\r\n                      selectedPage,\r\n                      setSelectedPage,\r\n                    }}\r\n                  />\r\n                </TabPane>\r\n                <TabPane tabId=\"3\">\r\n                  <Card>\r\n                    <Upload />\r\n                  </Card>\r\n                </TabPane>\r\n              </TabContent>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Get redux state values\r\nconst mapStatetoProps = (state) => ({\r\n  playlists: selectors.playlists.playlists(state),\r\n  activeChannel: selectors.channels.activeChannel(state),\r\n  onePlayist: selectors.playlists.onePlaylist(state),\r\n  videos: selectors.videos.videos(state),\r\n  videosByPlaylist: selectors.videos.videosByPlaylist(state),\r\n  count: selectors.videos.count(state),\r\n});\r\n\r\n// Get redux state function\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddPlaylist: (data) => dispatch(Actions.playlists.addPlaylistRequest(data)),\r\n  onPlaylistDelete: (data) =>\r\n    dispatch(Actions.playlists.deletePlaylistRequest(data)),\r\n  onUpdatePlaylist: (data) =>\r\n    dispatch(Actions.playlists.updatePlaylistRequest(data)),\r\n  onGetPlaylist: (data) =>\r\n    dispatch(Actions.playlists.getPlaylistsRequest(data)),\r\n  onGetOnePlaylist: (data) =>\r\n    dispatch(Actions.playlists.getOnePlaylistRequest(data)),\r\n\r\n  onUpdateVideo: (data) => dispatch(Actions.videos.updateVideoRequest(data)),\r\n  onAddVideoToPlaylist: (data) =>\r\n    dispatch(Actions.videos.addVideoToPlaylistRequest(data)),\r\n  onGetVideosByPlaylist: (data) =>\r\n    dispatch(Actions.videos.getVideoByPlaylistRequest(data)),\r\n  onRemoveVideoFromPlaylist: (data) =>\r\n    dispatch(Actions.videos.removeVideoFromPlaylistRequest(data)),\r\n  onGetVideos: (data) => dispatch(Actions.videos.getVideosRequest(data)),\r\n});\r\n\r\nexport default connect(\r\n  mapStatetoProps,\r\n  mapDispatchToProps\r\n)(withNamespaces()(Content));\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\StackedColumnChart.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\WelcomeComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\SocialSource.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\MonthlyEarning.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ActivityComp.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\LatestTranaction.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\Common\\Breadcrumb.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\TopCities.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\actions.js",["375"],"\r\nexport const Types = {\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  \r\n  REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST',\r\n  REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS',\r\n  \r\n  FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST',\r\n  FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS',\r\n\r\n  SEND_NEW_PASSAWORD_REQUEST: 'SEND_NEW_PASSAWORD_REQUEST',\r\n  SEND_NEW_PASSAWORD_SUCCESS: 'SEND_NEW_PASSAWORD_SUCCESS',\r\n\r\n  LOG_OUT: 'LOG_OUT',\r\n\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst loginRequest = (payload) => ({\r\n  type: Types.LOGIN_REQUEST,\r\n  payload\r\n})\r\n\r\nconst loginSucces = (payload) => ({\r\n  type: Types.LOGIN_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst registerUserRequest = (payload) => ({\r\n  type: Types.REGISTER_USER_REQUEST,\r\n  payload\r\n})\r\n\r\nconst registerUserSucces = (payload) => ({\r\n  type: Types.REGISTER_USER_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordRequest = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_REQUEST,\r\n  payload\r\n})\r\n\r\nconst forgotPasswordSuccess = (payload) => ({\r\n  type: Types.FORGOT_PASSWORD_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst logOut = () => ({\r\n  type: Types.LOG_OUT\r\n})\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\nconst sendNewPasswordRequest = (payload) => ({\r\n  type: Types.SEND_NEW_PASSAWORD_REQUEST,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  loginRequest,\r\n  loginSucces,\r\n  registerUserRequest,\r\n  registerUserSucces,\r\n  forgotPasswordRequest,\r\n  forgotPasswordSuccess,\r\n  logOut,\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n  sendNewPasswordRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\actions.js",["376"],"\r\nexport const Types = {\r\n  GET_USER_PROFILE_REQUEST: 'GET_USER_PROFILE_REQUEST',\r\n  GET_USER_PROFILE_SUCCESS: 'GET_USER_PROFILE_SUCCESS',\r\n  \r\n  CHANGE_USER_PROFILE_REQUEST: 'CHANGE_USER_PROFILE_REQUEST',\r\n  CHANGE_USER_PROFILE_SUCCESS: 'CHANGE_USER_PROFILE_SUCCESS',\r\n}\r\n\r\nconst getUserProfileRequest = () => ({\r\n  type: Types.GET_USER_PROFILE_REQUEST,\r\n})\r\n\r\nconst getUserProfileSucces = (payload) => ({\r\n  type: Types.GET_USER_PROFILE_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileRequest = (payload) => ({\r\n  type: Types.CHANGE_USER_PROFILE_REQUEST,\r\n  payload\r\n})\r\n\r\nconst changeUserProfileSucces = () => ({\r\n  type: Types.CHANGE_USER_PROFILE_SUCCESS,\r\n})\r\n\r\n\r\nexport default {\r\n  getUserProfileRequest,\r\n  getUserProfileSucces,\r\n  changeUserProfileRequest,\r\n  changeUserProfileSucces,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\actions.js",["377"],"\r\nexport const Types = {\r\n  SET_ERROR_NOTIFY: 'SET_ERROR_NOTIFY',\r\n  SET_SUCCESS_NOTIFY: 'SET_SUCCESS_NOTIFY',\r\n}\r\n\r\nconst setErrorNotify = (payload) => ({\r\n  type: Types.SET_ERROR_NOTIFY,\r\n  payload\r\n})\r\n\r\nconst setSuccessNotify = (payload) => ({\r\n  type: Types.SET_SUCCESS_NOTIFY,\r\n  payload\r\n})\r\n\r\n\r\nexport default {\r\n  setErrorNotify,\r\n  setSuccessNotify,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\actions.js",["378"],"export const Types = {\r\n  ADD_PLAYLIST_REQUEST: \"ADD_PLAYLIST_REQUEST\",\r\n  ADD_PLAYLIST_SUCCESS: \"ADD_PLAYLIST_SUCCESS\",\r\n\r\n  GET_PLAYLISTS_REQUEST: \"GET_PLAYLISTS_REQUEST\",\r\n  GET_PLAYLISTS_SUCCESS: \"GET_PLAYLISTS_SUCCESS\",\r\n\r\n  GET_ONE_PLAYLIST_REQUEST: \"GET_ONE_PLAYLIST_REQUEST\",\r\n  GET_ONE_PLAYLIST_SUCCESS: \"GET_ONE_PLAYLIST_SUCCESS\",\r\n\r\n  DELETE_PLAYLIST_REQUEST: \"DELETE_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_PLAYLIST_REQUEST: \"UPDATE_PLAYLIST_REQUEST\",\r\n\r\n  \r\n\r\n};\r\n\r\nconst addPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addPlaylistSuccess = () => ({\r\n  type: Types.ADD_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getPlaylistsRequest = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst getPlaylistsSuccess = (payload) => ({\r\n  type: Types.GET_PLAYLISTS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getOnePlaylistRequest = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst getOnePlaylistSuccess = (payload) => ({\r\n  type: Types.GET_ONE_PLAYLIST_REQUEST,\r\n  payload\r\n})\r\n\r\nconst deletePlaylistRequest = (payload) => ({\r\n  type: Types.DELETE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updatePlaylistRequest = (payload) => ({\r\n  type: Types.UPDATE_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addPlaylistRequest,\r\n  addPlaylistSuccess,\r\n  getPlaylistsRequest,\r\n  getPlaylistsSuccess,\r\n  getOnePlaylistRequest,\r\n  getOnePlaylistSuccess,\r\n  deletePlaylistRequest,\r\n  updatePlaylistRequest,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\actions.js",["379"],"\r\nexport const Types = {\r\n  ADD_CHANNEL_REQUEST: 'ADD_CHANNEL_REQUEST',\r\n  ADD_CHANNEL_SUCCESS: 'ADD_CHANNEL_SUCCESS',\r\n  \r\n  GET_CHANNELS_REQUEST: 'GET_CHANNELS_REQUEST',\r\n  GET_CHANNELS_SUCCESS: 'GET_CHANNELS_SUCCESS',\r\n  \r\n  SET_ACTIVE_CHANNEL: 'SET_ACTIVE_CHANNEL',\r\n  \r\n  DELETE_CHANNEL_REQUEST: 'DELETE_CHANNEL_REQUEST',\r\n\r\n  UPDATE_CHANNEL_REQUEST: 'UPDATE_CHANNEL_REQUEST',\r\n}\r\n\r\nconst addChannelRequest = (payload) => ({\r\n  type: Types.ADD_CHANNEL_REQUEST,\r\n  payload\r\n})\r\n\r\nconst addChannelSucces = (payload) => ({\r\n  type: Types.ADD_CHANNEL_SUCCESS,\r\n  payload\r\n})\r\n\r\nconst getChannelsRequest = () => ({\r\n  type: Types.GET_CHANNELS_REQUEST,\r\n})\r\n\r\nconst getChannelsSuccess = (payload) => ({\r\n  type: Types.GET_CHANNELS_SUCCESS,\r\n  payload,\r\n})\r\n\r\nconst setActiveChannel = (payload) => ({\r\n  type: Types.SET_ACTIVE_CHANNEL,\r\n  payload,\r\n})\r\n\r\nconst deleteChannelRequest = (payload) => ({\r\n  type: Types.DELETE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\nconst updateChannelRequest = (payload) => ({\r\n  type: Types.UPDATE_CHANNEL_REQUEST,\r\n  payload,\r\n})\r\n\r\n\r\nexport default {\r\n  addChannelRequest,\r\n  addChannelSucces,\r\n  getChannelsRequest,\r\n  getChannelsSuccess,\r\n  setActiveChannel,\r\n  deleteChannelRequest,\r\n  updateChannelRequest,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actions.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\actions.js",["380"],"export const Types = {\r\n  ADD_VIDEO_TO_PLAYLIST_REQUEST: \"ADD_VIDEO_TO_PLAYLIST_REQUEST\",\r\n  ADD_VIDEO_TO_PLAYLIST_SUCCESS: \"ADD_VIDEO_TO_PLAYLIST_SUCCESS\",\r\n\r\n  GET_VIDEOS_REQUEST: \"GET_VIDEOS_REQUEST\",\r\n  GET_VIDEOS_SUCCESS: \"GET_VIDEOS_SUCCESS\",\r\n\r\n  GET_VIDEO_BY_PLAYLIST_REQUEST: \"GET_VIDEO_BY_PLAYLIST_REQUEST\",\r\n  GET_VIDEO_BY_PLAYLIST_SUCCESS: \"GET_VIDEO_BY_PLAYLIST_SUCCESS\",\r\n\r\n  REMOVE_VIDEO_FROM_PLAYLIST_REQUEST: \"REMOVE_VIDEO_FROM_PLAYLIST_REQUEST\",\r\n\r\n  UPDATE_VIDEO_REQUEST: \"UPDATE_VIDEO_REQUEST\",\r\n};\r\n\r\nconst addVideoToPlaylistRequest = (payload) => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst addVideoToPlaylistSuccess = () => ({\r\n  type: Types.ADD_VIDEO_TO_PLAYLIST_SUCCESS,\r\n});\r\n\r\nconst getVideosRequest = (payload) => ({\r\n  type: Types.GET_VIDEOS_REQUEST,\r\n  payload\r\n});\r\n\r\nconst getVideosSuccess = (payload) => ({\r\n  type: Types.GET_VIDEOS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst getVideoByPlaylistRequest = (payload) => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_REQUEST,\r\n  payload\r\n});\r\n\r\nconst getVideoByPlaylistSuccess = (payload) => ({\r\n  type: Types.GET_VIDEO_BY_PLAYLIST_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst removeVideoFromPlaylistRequest = (payload) => ({\r\n  type: Types.REMOVE_VIDEO_FROM_PLAYLIST_REQUEST,\r\n  payload,\r\n});\r\n\r\nconst updateVideoRequest = (payload) => ({\r\n  type: Types.UPDATE_VIDEO_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport default {\r\n  addVideoToPlaylistRequest,\r\n  addVideoToPlaylistSuccess,\r\n  getVideosRequest,\r\n  getVideosSuccess,\r\n  getVideoByPlaylistRequest,\r\n  getVideoByPlaylistSuccess,\r\n  removeVideoFromPlaylistRequest,\r\n  updateVideoRequest,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\index.js",["381"],"import authorization from './authorization'\r\nimport profile from './profile'\r\nimport common from './common'\r\nimport channels from './channels'\r\nimport playlists from './playlists'\r\nimport videos from './videos'\r\n\r\nexport default {\r\n    authorization,\r\n    profile,\r\n    common,\r\n    channels,\r\n    playlists,\r\n    videos\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\reducer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\validation.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Channels\\DeleteChannelDialog.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\videos.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Footer.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\Rightbar.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Navbar.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\channels.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\authorization.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\playlists.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\sagas\\profile.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\saga.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Dashboard\\ApexRadial.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Upload\\Upload.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\TabButton\\TabButton.jsx",["382"],"import React from \"react\";\nimport classnames from \"classnames\";\nimport { Button, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst TabButton = (props) => {\n  const { activeTab, toggleTab, characters, dragVIdeo } = props;\n  const buttons = [\n    { name: \"Upload\", tab: \"3\" },\n    { name: \"Playlists\", tab: \"1\", total: characters?.length },\n    { name: \"Videos\", tab: \"2\", total: dragVIdeo?.length },\n  ];\n  return (\n    <Nav className=\"border-0 navi\" vertical>\n      {buttons.map((b, index) => {\n        return (\n          <NavItem\n            key={index}\n            className={b.name === \"Upload\" ? \"w-100\"  : \"d-flex justify-content-between align-items-baseline\"}\n          >\n            <NavLink\n              className=\"px-0\"\n              className={classnames({\n                active: activeTab === b.tab,\n              })}\n              onClick={() => {\n                toggleTab(b.tab);\n              }}\n            >\n              {b.name === \"Upload\" ? (\n                <Button className=\"w-100 mb-4\" color=\"success\">\n                  {b.name}\n                </Button>\n              ) : (\n                <>\n                  {\" \"}\n                  <i className=\"dripicons-star mr-2\"></i> {b.name}\n                </>\n              )}\n            </NavLink>\n            {b.name === \"Upload\" ? null : <span>{b.total || 0}</span>}\n          </NavItem>\n        );\n      })}\n    </Nav>\n  );\n};\n\nexport default TabButton;","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\TabPanel.jsx",["383","384","385"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\HorizontalLayout\\Header.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\layout\\actionTypes.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\common\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\profile\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\authorization\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\channels\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\playlists\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\store\\videos\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\LanguageDropdown.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\playlists\\index.js",["386"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.playlists)\r\nconst playlists = deepEqualSelector(self, data => data.playlists)\r\nconst onePlaylist = deepEqualSelector(self, data => data.onePlaylist)\r\n\r\nexport default {\r\n  playlists,\r\n  onePlaylist,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\channels\\index.js",["387"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst self = deepEqualSelector(selector, data => data.channels)\r\nconst channels = deepEqualSelector(self, data => data.channels)\r\nconst activeChannel = deepEqualSelector(self, data => data.activeChannel)\r\nconst isChannelAddedSuccessfuly = deepEqualSelector(self, data => data.isChannelAddedSuccessfuly)\r\n\r\nexport default {\r\n  channels,\r\n  activeChannel,\r\n  isChannelAddedSuccessfuly,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\common\\index.js",["388"],"import { createSelectorCreator, defaultMemoize, createSelector } from 'reselect'\r\nimport isEqual from 'lodash.isequal'\r\n\r\nexport const selector = createSelector((s) => s, s => s)\r\nconst common = createSelector(selector, data => data.common) \r\nconst errorMessage = createSelector(common, data => data.errorMessage) \r\nconst successMessage = createSelector(common, data => data.successMessage) \r\n\r\nexport const deepEqualSelector = createSelectorCreator(\r\n    defaultMemoize,\r\n    isEqual,\r\n)\r\n\r\nexport default {\r\n    errorMessage,\r\n    successMessage,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\authorization\\index.js",["389"],"import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst authorization = createSelector(selector, data => data.authorization)\r\nconst authData = deepEqualSelector(authorization, data => data.authData)\r\n\r\nexport default {\r\n  authData,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\profile\\index.js",["390"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from '../common'\r\n\r\nconst profile = deepEqualSelector(selector, data => data.profile)\r\nconst user = deepEqualSelector(profile, data => data.user)\r\n\r\nexport default {\r\n  user,\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\selectors\\videos\\index.js",["391"],"// import { createSelector } from 'reselect'\r\nimport { selector, deepEqualSelector } from \"../common\";\r\n\r\nconst self = deepEqualSelector(selector, (data) => data.videos);\r\nconst videos = deepEqualSelector(self, (data) => data.videos);\r\nconst videosByPlaylist = deepEqualSelector(\r\n  self,\r\n  (data) => data.videosByPlaylist\r\n);\r\nconst count = deepEqualSelector(self, (data) => data.count)\r\n\r\nexport default {\r\n  videos,\r\n  count,\r\n  videosByPlaylist,\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CheckItems.jsx",["392"],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\CreateEdit.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\DeleteModal.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\EmptyMessage.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\index.js",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Pagination\\Pagination.jsx",["393","394"],"import React, { useEffect, useState } from \"react\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\n\nconst PaginationVideos = (props) => {\n  const {\n    count,\n    onGetVideos,\n    updateDragVideo,\n    videos,\n    selectedPage,\n    setSelectedPage,\n  } = props;\n\n  const handleSelected = (page) => {\n    onGetVideos((page - 1) * 25);\n    setSelectedPage(page);\n  };\n\n  useEffect(() => {\n    if (selectedPage) {\n      updateDragVideo(videos);\n    }\n  }, [selectedPage, videos]);\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <PaginationComponent\n        totalItems={count}\n        pageSize={25}\n        onSelect={handleSelected}\n        defaultActivePage={selectedPage}\n      />\n    </div>\n  );\n};\n\nexport default PaginationVideos;\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIVideo.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\ButtonsAPI\\ButtonsAPIPlaylist.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\profile.js",["395"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  getUserProfile: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `?action=GetUserProfile&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(queryString, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  changeUserProfile: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateUserProfile&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\channels.js",["396"],"import { axiosInstance } from './index'\r\nimport { sha1 } from '../sha1'\r\n\r\nexport default {\r\n \r\n  addChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=AddChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  deleteChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=DeleteChannel&openKey=${authData.openKey}`\r\n    const jsonData = JSON.stringify(data)\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  updateChannel: async (data) => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    if(!authData) return false\r\n\r\n    const queryString = `action=UpdateChannel&openKey=${authData.openKey}`\r\n    \r\n    const jsonData = JSON.stringify({fields: data })\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData()\r\n   \r\n    formData.append('jsonData', jsonData)\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  \r\n  getChannels: async () => {\r\n    const authData = sessionStorage.getItem('bringStreamAuth') ? JSON.parse(sessionStorage.getItem('bringStreamAuth')) : null \r\n    if(!authData) return false\r\n\r\n    const queryString = `action=GetChannels&openKey=${authData.openKey}`\r\n    const signature = sha1(queryString + authData.privateKey);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      signature: signature\r\n    }\r\n\r\n    return await axiosInstance.post(`?${queryString}`, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\videos.js",["397"],"import { axiosInstance } from \"./index\";\r\nimport { sha1 } from \"../sha1\";\r\n\r\nexport default {\r\n    addVideoToPlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=AddVideoToPlaylist&openKey=${authData.openKey}`;\r\n    const jsonData = JSON.stringify(data);\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"jsonData\", jsonData);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n      .post(`?${queryString}`, formData, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n\r\n  removeVideoFromPlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=RemoveVideoFromPlaylist&openKey=${authData.openKey}`;\r\n    const jsonData = JSON.stringify(data);\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n    formData.append(\"jsonData\", jsonData);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n        .post(`?${queryString}`, formData, config)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((error) => ({ error }))\r\n  },\r\n\r\n  updateVideo: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=UpdateVideo&openKey=${authData.openKey}`;\r\n\r\n    const jsonData = JSON.stringify({ fields: data });\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n    formData.append(\"jsonData\", jsonData);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n        .post(`?${queryString}`, formData, config)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((error) => ({ error }))\r\n  },\r\n\r\n  getVideos: async (data) => {\r\n    debugger;\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n    const queryString = `action=GetVideos&openKey=${authData.openKey}&offset=${data}`;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return await axiosInstance\r\n      .get(`?${queryString}`, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n\r\n  getVideosByPlaylists: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n    const queryString = `action=GetVideosByPlaylists&openKey=${authData.openKey}&where=playlist_id=${data}`;\r\n    const jsonData = JSON.stringify({where: data});\r\n    const formData = new FormData();\r\n    formData.append(\"jsonData\", jsonData);\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n      .get(`?${queryString}`, formData, config)\r\n      .then((response) => {\r\n        console.log(\"videos: \", response);\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\authorization.js",["398"],"import { axiosInstance } from './index'\r\n\r\nexport default {\r\n  logIn: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Login', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  registerUser: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=Register', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n  \r\n  forgotPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=ForgotPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n\r\n  newPassword: async (data) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append('jsonData', JSON.stringify(data))\r\n\r\n    return await axiosInstance.post('?action=NewPassword', formData, config).then(response => {\r\n      return response\r\n    }).catch(error => ({ error }))\r\n  },\r\n}","F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\api\\playlists.js",["399"],"import { axiosInstance } from \"./index\";\r\nimport { sha1 } from \"../sha1\";\r\n\r\nexport default {\r\n  addPlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=AddPlaylist&openKey=${authData.openKey}`;\r\n    const jsonData = JSON.stringify({ fields: data });\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"jsonData\", jsonData);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n      .post(`?${queryString}`, formData, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n\r\n  deletePlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=DeletePlaylist&openKey=${authData.openKey}`;\r\n    const jsonData = JSON.stringify({id: data});\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n    formData.append(\"jsonData\", jsonData);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n        .post(`?${queryString}`, formData, config)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((error) => ({ error }))\r\n  },\r\n\r\n  updatePlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n\r\n    const queryString = `action=UpdatePlaylist&openKey=${authData.openKey}`;\r\n\r\n    const jsonData = JSON.stringify({ fields: data });\r\n    const signature = sha1(queryString + authData.privateKey + jsonData);\r\n    const formData = new FormData();\r\n    formData.append(\"jsonData\", jsonData);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      signature: signature,\r\n    };\r\n\r\n    return await axiosInstance\r\n        .post(`?${queryString}`, formData, config)\r\n        .then((response) => {\r\n          return response;\r\n        })\r\n        .catch((error) => ({ error }))\r\n  },\r\n\r\n  getPlaylists: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n    const queryString = `action=GetPlaylists&openKey=${authData.openKey}&where=channel_id=${data.id}`;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    return await axiosInstance\r\n      .get(`?${queryString}`, config)\r\n      .then((response) => {\r\n        console.log('playlists: ', response)\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n\r\n  getOnePlaylist: async (data) => {\r\n    const authData = sessionStorage.getItem(\"bringStreamAuth\")\r\n      ? JSON.parse(sessionStorage.getItem(\"bringStreamAuth\"))\r\n      : null;\r\n    if (!authData) return false;\r\n    const queryString = `action=GetPlaylists&openKey=${authData.openKey}&where=id=${data.id}`;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    return await axiosInstance\r\n      .get(`?${queryString}`, config)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .catch((error) => ({ error }));\r\n  },\r\n};\r\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\FormaData.jsx",["400","401"],"import React, { useState } from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  FormGroup,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n} from \"reactstrap\";\n\nconst FormaData = (props) => {\n  const {\n    valueButton,\n    editName,\n    setEditName,\n    editDescription,\n    setChekedItems,\n    setChangePage,\n    setCheckName,\n    setCheckDesc,\n    setEditDescription,\n    onUpdatePlaylist,\n    checkedItems,\n    onGetPlaylist,\n    activeChannel,\n    onAddPlaylist,\n    modalSave,\n    setModalSave,\n    onUpdateVideo,\n    onAddVideoToPlaylist,\n    onGetVideosByPlaylist,\n    getPlaylist,\n    characters,\n  } = props;\n\n  const [require, setRequire] = useState(false);\n  const [playlistId, setPlaylistId] = useState(characters[0].id);\n\n  // On submit\n  function onSubmit() {\n    if (editName === \"\" || editDescription === \"\") {\n      setRequire(true);\n    } else {\n      switch (valueButton) {\n        case \"editPlaylist\":\n          onUpdatePlaylist({ id: checkedItems[0], name: editName });\n          onGetPlaylist({ id: activeChannel.id });\n          break;\n        case \"newPlaylist\":\n          onAddPlaylist({\n            name: editName,\n            description: editDescription,\n            channel_id: activeChannel.id,\n          });\n          onGetPlaylist({ id: activeChannel.id });\n          break;\n        case \"editVideo\":\n          onUpdateVideo({ id: checkedItems[0], name: editName });\n          onGetVideosByPlaylist(getPlaylist);\n          break;\n        case \"newVideo\":\n          onAddVideoToPlaylist({\n            playlist_id: playlistId,\n            video_id: checkedItems[0],\n          });\n          onGetVideosByPlaylist(getPlaylist);\n          break;\n      }\n      setCheckName(\"\");\n      setCheckDesc(\"\");\n      setEditName(\"\");\n      setEditDescription(\"\");\n      setChangePage(false);\n      setChekedItems([]);\n    }\n  }\n\n  const getPlailistId = (e) => {\n    const name = e.target.value;\n    const arr = characters?.filter((c) => c.name == name);\n    const id = arr[0]?.id;\n    setPlaylistId(id);\n  };\n\n  // Modal window (Save changes)\n  const toggleSave = () => {\n    setModalSave(!modalSave);\n  };\n\n  // On chnage global function\n  const onChanged = (setName) => (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <AvForm onValidSubmit={onSubmit}>\n      <FormGroup className=\"w-50\">\n        <AvField\n          name=\"title\"\n          className=\"form-control\"\n          placeholder=\"title\"\n          type=\"text\"\n          required={require}\n          label=\"Title\"\n          value={editName}\n          onChange={onChanged(setEditName)}\n        />\n        <AvField\n          className=\"form-control\"\n          type=\"textarea\"\n          rows=\"5\"\n          label=\"Description\"\n          name=\"description\"\n          required={require}\n          placeholder=\"description\"\n          value={editDescription}\n          onChange={onChanged(setEditDescription)}\n        />\n        {valueButton === \"editVideo\" || valueButton === \"newVideo\" ? (\n          <AvField\n            type=\"select\"\n            name=\"select\"\n            label=\"Option\"\n            helpMessage=\"Please, chose playlist\"\n            vlaue={playlistId}\n            onChange={(e) => getPlailistId(e)}\n          >\n            {characters.map((c) => {\n              return <option key={c.id}>{c.name}</option>;\n            })}\n          </AvField>\n        ) : null}\n      </FormGroup>\n      <FormGroup>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          className=\"mr-1 waves-effect waves-light\"\n        >\n          Save Changes\n        </Button>\n        <Button\n          onClick={() => {\n            setChekedItems([]);\n            setChangePage(false);\n            setCheckName(\"\");\n            setCheckDesc(\"\");\n            setEditName(\"\");\n            setEditDescription(\"\");\n          }}\n          type=\"button\"\n          color=\"secondary\"\n          className=\"waves-effect\"\n        >\n          Cancel\n        </Button>\n      </FormGroup>\n      <Modal isOpen={modalSave} toggle={toggleSave}>\n        <ModalHeader toggle={toggleSave}>Are you sure?</ModalHeader>\n        <ModalBody>\n          You have unsaved data. You want to leave the page?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" className=\"w-sm\" onClick={toggleSave}>\n            Cancel\n          </Button>\n          <Button color=\"danger\" className=\"w-sm\" onClick={onSubmit}>\n            Save Changes\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </AvForm>\n  );\n};\n\nexport default FormaData;\n","F:\\Програмування\\bringstream\\channel-admin-test\\src\\pages\\Content\\Common\\LanguagesTabs.jsx",[],"F:\\Програмування\\bringstream\\channel-admin-test\\src\\helpers\\sha1.js",[],{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","severity":1,"message":"407","line":53,"column":41,"nodeType":"408","messageId":"409","endLine":53,"endColumn":43},{"ruleId":"406","severity":1,"message":"407","line":53,"column":73,"nodeType":"408","messageId":"409","endLine":53,"endColumn":75},{"ruleId":"410","severity":1,"message":"411","line":56,"column":5,"nodeType":"412","endLine":56,"endColumn":15,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":10,"column":1,"nodeType":"416","endLine":17,"endColumn":2},{"ruleId":"410","severity":1,"message":"417","line":28,"column":6,"nodeType":"412","endLine":28,"endColumn":36,"suggestions":"418"},{"ruleId":"410","severity":1,"message":"419","line":32,"column":5,"nodeType":"412","endLine":32,"endColumn":46,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":66,"column":5,"nodeType":"423","messageId":"424","endLine":85,"endColumn":6},{"ruleId":"410","severity":1,"message":"425","line":138,"column":6,"nodeType":"412","endLine":138,"endColumn":27,"suggestions":"426"},{"ruleId":"414","severity":1,"message":"415","line":82,"column":1,"nodeType":"416","endLine":95,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":29,"column":1,"nodeType":"416","endLine":34,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":18,"column":1,"nodeType":"416","endLine":21,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":58,"column":1,"nodeType":"416","endLine":67,"endColumn":3},{"ruleId":"414","severity":1,"message":"415","line":51,"column":1,"nodeType":"416","endLine":59,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":55,"column":1,"nodeType":"416","endLine":64,"endColumn":3},{"ruleId":"414","severity":1,"message":"415","line":8,"column":1,"nodeType":"416","endLine":15,"endColumn":2},{"ruleId":"427","severity":1,"message":"428","line":22,"column":15,"nodeType":"429","endLine":24,"endColumn":18},{"ruleId":"430","severity":1,"message":"431","line":66,"column":17,"nodeType":"432","messageId":"433","endLine":66,"endColumn":19},{"ruleId":"430","severity":1,"message":"431","line":75,"column":19,"nodeType":"432","messageId":"433","endLine":75,"endColumn":21},{"ruleId":"410","severity":1,"message":"434","line":86,"column":6,"nodeType":"412","endLine":86,"endColumn":72,"suggestions":"435"},{"ruleId":"414","severity":1,"message":"415","line":8,"column":1,"nodeType":"416","endLine":11,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":9,"column":1,"nodeType":"416","endLine":13,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":14,"column":1,"nodeType":"416","endLine":17,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":7,"column":1,"nodeType":"416","endLine":9,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":7,"column":1,"nodeType":"416","endLine":9,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":12,"column":1,"nodeType":"416","endLine":16,"endColumn":3},{"ruleId":"436","severity":1,"message":"437","line":61,"column":33,"nodeType":"438","endLine":64,"endColumn":35},{"ruleId":"439","severity":1,"message":"440","line":1,"column":28,"nodeType":"441","messageId":"442","endLine":1,"endColumn":36},{"ruleId":"410","severity":1,"message":"443","line":23,"column":6,"nodeType":"412","endLine":23,"endColumn":28,"suggestions":"444"},{"ruleId":"414","severity":1,"message":"415","line":4,"column":1,"nodeType":"416","endLine":49,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":4,"column":1,"nodeType":"416","endLine":96,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":4,"column":1,"nodeType":"416","endLine":131,"endColumn":3},{"ruleId":"414","severity":1,"message":"415","line":3,"column":1,"nodeType":"416","endLine":63,"endColumn":2},{"ruleId":"414","severity":1,"message":"415","line":4,"column":1,"nodeType":"416","endLine":126,"endColumn":3},{"ruleId":"421","severity":1,"message":"422","line":45,"column":7,"nodeType":"423","messageId":"424","endLine":69,"endColumn":8},{"ruleId":"430","severity":1,"message":"431","line":81,"column":50,"nodeType":"432","messageId":"433","endLine":81,"endColumn":52},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'lastLoactionPathname'. Either include them or remove the dependency array.","ArrayExpression",["447"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'hash', 'isSent', and 'onSendNewPassword'. Either include them or remove the dependency array.",["448"],"React Hook useEffect has missing dependencies: 'history' and 'resetIsChannelAddedValue'. Either include them or remove the dependency array.",["449"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'defaultChannel'. Either include it or remove the dependency array.",["450"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'characters', 'checkName', 'dragVIdeo?.length', 'editName', 'onGetPlaylist', 'onGetVideos', 'selectedPage', 'setSelectedPage', 'updateCharacters', and 'updateDragVideo'. Either include them or remove the dependency array.",["451"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'updateDragVideo'. Either include it or remove the dependency array.",["452"],"no-global-assign","no-unsafe-negation",{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},"Update the dependencies array to be: [channels, history, lastLoactionPathname]",{"range":"465","text":"466"},"Update the dependencies array to be: [successMessage, errorMessage, hash, isSent, onSendNewPassword]",{"range":"467","text":"468"},"Update the dependencies array to be: [errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",{"range":"469","text":"470"},"Update the dependencies array to be: [defaultChannel, props.activeChannel]",{"range":"471","text":"472"},"Update the dependencies array to be: [defaultChannel, playlists, videosByPlaylist, videos, getPlaylist, characters, checkName, editName, selectedPage, onGetPlaylist, updateCharacters, dragVIdeo?.length, updateDragVideo, onGetVideos, setSelectedPage]",{"range":"473","text":"474"},"Update the dependencies array to be: [selectedPage, updateDragVideo, videos]",{"range":"475","text":"476"},[1807,1817],"[channels, history, lastLoactionPathname]",[1033,1063],"[successMessage, errorMessage, hash, isSent, onSendNewPassword]",[913,954],"[errorMessgae, history, isChannelAddedSuccessfuly, resetIsChannelAddedValue]",[4167,4188],"[defaultChannel, props.activeChannel]",[2105,2171],"[defaultChannel, playlists, videosByPlaylist, videos, getPlaylist, characters, checkName, editName, selectedPage, onGetPlaylist, updateCharacters, dragVIdeo?.length, updateDragVideo, onGetVideos, setSelectedPage]",[468,490],"[selectedPage, updateDragVideo, videos]"]